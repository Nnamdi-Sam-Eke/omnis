{"version":3,"file":"static/js/272.a2b8fa01.chunk.js","mappings":"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","sources":["components/SimulationTrendsChart.js"],"sourcesContent":["import React, { useState, useEffect, Suspense } from \"react\";\r\nimport { ChevronRight, ChevronUp, TrendingUp, BarChart3 } from \"lucide-react\";\r\n\r\n// Modern Professional Loader Component\r\nconst ModernLoader = ({ height = \"h-full\" }) => {\r\n  return (\r\n    <div className={`${height} flex items-center justify-center bg-gradient-to-br from-slate-50 to-white dark:from-slate-900 dark:to-slate-800 rounded-2xl`}>\r\n      <div className=\"relative\">\r\n        {/* Orbital rings */}\r\n        <div className=\"absolute inset-0 w-20 h-20 rounded-full border-2 border-transparent border-t-violet-500 animate-spin\"></div>\r\n        <div className=\"absolute inset-2 w-16 h-16 rounded-full border-2 border-transparent border-r-cyan-500 animate-spin animation-delay-75\" style={{animationDirection: 'reverse'}}></div>\r\n        <div className=\"absolute inset-4 w-12 h-12 rounded-full border-2 border-transparent border-b-emerald-500 animate-spin animation-delay-150\"></div>\r\n        \r\n        {/* Center pulse */}\r\n        <div className=\"absolute inset-6 w-8 h-8 rounded-full bg-gradient-to-r from-violet-500 via-cyan-500 to-emerald-500 animate-pulse shadow-lg\"></div>\r\n        \r\n        {/* Floating particles */}\r\n        <div className=\"absolute -top-2 -left-2 w-2 h-2 bg-violet-400 rounded-full animate-bounce animation-delay-300\"></div>\r\n        <div className=\"absolute -top-2 -right-2 w-2 h-2 bg-cyan-400 rounded-full animate-bounce animation-delay-500\"></div>\r\n        <div className=\"absolute -bottom-2 -left-2 w-2 h-2 bg-emerald-400 rounded-full animate-bounce animation-delay-700\"></div>\r\n        <div className=\"absolute -bottom-2 -right-2 w-2 h-2 bg-pink-400 rounded-full animate-bounce animation-delay-900\"></div>\r\n      </div>\r\n      \r\n      <div className=\"ml-8 text-center\">\r\n        <div className=\"text-lg font-semibold bg-gradient-to-r from-violet-600 via-cyan-600 to-emerald-600 bg-clip-text text-transparent\">\r\n          Loading Analytics\r\n        </div>\r\n        <div className=\"text-sm text-slate-500 dark:text-slate-400 mt-1\">\r\n          Preparing your data visualization...\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Mock Chart component with tooltips and axis\r\nconst LineChart = ({ data, options }) => {\r\n  const [tooltip, setTooltip] = useState({ show: false, x: 0, y: 0, data: null });\r\n  const maxValue = Math.max(...data.datasets[0].data);\r\n  const minValue = Math.min(...data.datasets[0].data);\r\n  const chartWidth = 340;\r\n  const chartHeight = 160;\r\n  const padding = { left: 40, right: 20, top: 20, bottom: 40 };\r\n  \r\n  const handleMouseMove = (event, value, index, date) => {\r\n    const rect = event.currentTarget.closest('svg').getBoundingClientRect();\r\n    const x = padding.left + (index / (data.datasets[0].data.length - 1)) * chartWidth;\r\n    const y = chartHeight + padding.top - ((value - minValue) / (maxValue - minValue)) * chartHeight;\r\n    \r\n    // Convert SVG coordinates to screen coordinates\r\n    const screenX = (x / (chartWidth + padding.left + padding.right)) * rect.width;\r\n    const screenY = (y / (chartHeight + padding.top + padding.bottom)) * rect.height;\r\n    \r\n    setTooltip({\r\n      show: true,\r\n      x: screenX,\r\n      y: screenY,\r\n      data: { value, date: new Date(date).toLocaleDateString() }\r\n    });\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setTooltip({ show: false, x: 0, y: 0, data: null });\r\n  };\r\n\r\n  // Calculate Y-axis ticks\r\n  const yTicks = [];\r\n  const tickCount = 5;\r\n  for (let i = 0; i <= tickCount; i++) {\r\n    yTicks.push(Math.round(minValue + (maxValue - minValue) * (i / tickCount)));\r\n  }\r\n\r\n  return (\r\n    <div className=\"w-full h-full bg-gradient-to-br from-slate-50 to-white dark:from-slate-900 dark:to-slate-800 rounded-2xl p-6 border border-slate-200 dark:border-slate-700\">\r\n      <div className=\"flex items-center justify-between mb-6\">\r\n        <div className=\"flex items-center gap-2\">\r\n          <div className=\"w-3 h-3 bg-gradient-to-r from-violet-500 to-cyan-500 rounded-full\"></div>\r\n          <span className=\"text-sm font-medium text-slate-700 dark:text-slate-300\">Simulations</span>\r\n        </div>\r\n        <div className=\"text-2xl font-bold bg-gradient-to-r from-violet-600 to-cyan-600 bg-clip-text text-transparent\">\r\n          {data.datasets[0].data[data.datasets[0].data.length - 1]}\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"relative h-64\">\r\n        <svg viewBox={`0 0 ${chartWidth + padding.left + padding.right} ${chartHeight + padding.top + padding.bottom}`} className=\"w-full h-full\">\r\n          <defs>\r\n            <linearGradient id=\"gradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\r\n              <stop offset=\"0%\" stopColor=\"#8b5cf6\" />\r\n              <stop offset=\"50%\" stopColor=\"#06b6d4\" />\r\n              <stop offset=\"100%\" stopColor=\"#10b981\" />\r\n            </linearGradient>\r\n            <linearGradient id=\"areaGradient\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\r\n              <stop offset=\"0%\" stopColor=\"#8b5cf6\" stopOpacity=\"0.3\" />\r\n              <stop offset=\"100%\" stopColor=\"#06b6d4\" stopOpacity=\"0.1\" />\r\n            </linearGradient>\r\n          </defs>\r\n          \r\n          {/* Y-axis */}\r\n          <line\r\n            x1={padding.left}\r\n            y1={padding.top}\r\n            x2={padding.left}\r\n            y2={chartHeight + padding.top}\r\n            stroke=\"currentColor\"\r\n            strokeWidth=\"1\"\r\n            className=\"text-slate-300 dark:text-slate-600\"\r\n          />\r\n          \r\n          {/* X-axis */}\r\n          <line\r\n            x1={padding.left}\r\n            y1={chartHeight + padding.top}\r\n            x2={chartWidth + padding.left}\r\n            y2={chartHeight + padding.top}\r\n            stroke=\"currentColor\"\r\n            strokeWidth=\"1\"\r\n            className=\"text-slate-300 dark:text-slate-600\"\r\n          />\r\n          \r\n          {/* Y-axis ticks and labels */}\r\n          {yTicks.map((tick, index) => {\r\n            const y = chartHeight + padding.top - (index / (yTicks.length - 1)) * chartHeight;\r\n            return (\r\n              <g key={index}>\r\n                <line\r\n                  x1={padding.left - 5}\r\n                  y1={y}\r\n                  x2={padding.left}\r\n                  y2={y}\r\n                  stroke=\"currentColor\"\r\n                  strokeWidth=\"1\"\r\n                  className=\"text-slate-300 dark:text-slate-600\"\r\n                />\r\n                <text\r\n                  x={padding.left - 10}\r\n                  y={y + 4}\r\n                  textAnchor=\"end\"\r\n                  className=\"text-xs fill-slate-500 dark:fill-slate-400\"\r\n                >\r\n                  {tick}\r\n                </text>\r\n              </g>\r\n            );\r\n          })}\r\n          \r\n          {/* Grid lines */}\r\n          {yTicks.map((tick, index) => {\r\n            const y = chartHeight + padding.top - (index / (yTicks.length - 1)) * chartHeight;\r\n            return (\r\n              <line\r\n                key={index}\r\n                x1={padding.left}\r\n                y1={y}\r\n                x2={chartWidth + padding.left}\r\n                y2={y}\r\n                stroke=\"currentColor\"\r\n                strokeWidth=\"0.5\"\r\n                className=\"text-slate-200 dark:text-slate-700\"\r\n                strokeDasharray=\"2,2\"\r\n              />\r\n            );\r\n          })}\r\n          \r\n          {/* X-axis labels */}\r\n          {data.labels.map((label, index) => {\r\n            if (index % Math.ceil(data.labels.length / 6) === 0) {\r\n              const x = padding.left + (index / (data.labels.length - 1)) * chartWidth;\r\n              return (\r\n                <text\r\n                  key={index}\r\n                  x={x}\r\n                  y={chartHeight + padding.top + 20}\r\n                  textAnchor=\"middle\"\r\n                  className=\"text-xs fill-slate-500 dark:fill-slate-400\"\r\n                >\r\n                  {new Date(label).toLocaleDateString('en-US', { month: 'short', day: 'numeric' })}\r\n                </text>\r\n              );\r\n            }\r\n            return null;\r\n          })}\r\n          \r\n          {/* Area fill */}\r\n          <polygon\r\n            points={`${padding.left},${chartHeight + padding.top} ${data.datasets[0].data.map((value, index) => {\r\n              const x = padding.left + (index / (data.datasets[0].data.length - 1)) * chartWidth;\r\n              const y = chartHeight + padding.top - ((value - minValue) / (maxValue - minValue)) * chartHeight;\r\n              return `${x},${y}`;\r\n            }).join(' ')} ${chartWidth + padding.left},${chartHeight + padding.top}`}\r\n            fill=\"url(#areaGradient)\"\r\n          />\r\n          \r\n          {/* Data line */}\r\n          <polyline\r\n            points={data.datasets[0].data.map((value, index) => {\r\n              const x = padding.left + (index / (data.datasets[0].data.length - 1)) * chartWidth;\r\n              const y = chartHeight + padding.top - ((value - minValue) / (maxValue - minValue)) * chartHeight;\r\n              return `${x},${y}`;\r\n            }).join(' ')}\r\n            fill=\"none\"\r\n            stroke=\"url(#gradient)\"\r\n            strokeWidth=\"3\"\r\n            className=\"drop-shadow-sm\"\r\n          />\r\n          \r\n          {/* Data points */}\r\n          {data.datasets[0].data.map((value, index) => {\r\n            const x = padding.left + (index / (data.datasets[0].data.length - 1)) * chartWidth;\r\n            const y = chartHeight + padding.top - ((value - minValue) / (maxValue - minValue)) * chartHeight;\r\n            return (\r\n              <circle\r\n                key={index}\r\n                cx={x}\r\n                cy={y}\r\n                r=\"5\"\r\n                fill=\"white\"\r\n                stroke=\"url(#gradient)\"\r\n                strokeWidth=\"2\"\r\n                className=\"drop-shadow-sm cursor-pointer hover:r-6 transition-all\"\r\n                onMouseMove={(e) => handleMouseMove(e, value, index, data.labels[index])}\r\n                onMouseLeave={handleMouseLeave}\r\n              />\r\n            );\r\n          })}\r\n        </svg>\r\n        \r\n        {/* Tooltip */}\r\n        {tooltip.show && tooltip.data && (\r\n          <div\r\n            className=\"absolute z-10 bg-white dark:bg-slate-800 border border-slate-200 dark:border-slate-700 rounded-lg px-3 py-2 shadow-xl pointer-events-none\"\r\n            style={{\r\n              left: tooltip.x,\r\n              top: tooltip.y - 15,\r\n              transform: 'translate(-50%, -100%)'\r\n            }}\r\n          >\r\n            <div className=\"text-sm font-medium text-slate-900 dark:text-slate-100\">\r\n              {tooltip.data.value} simulations\r\n            </div>\r\n            <div className=\"text-xs text-slate-500 dark:text-slate-400\">\r\n              {tooltip.data.date}\r\n            </div>\r\n            {/* Tooltip arrow */}\r\n            <div className=\"absolute top-full left-1/2 transform -translate-x-1/2 w-0 h-0 border-l-4 border-r-4 border-t-4 border-transparent border-t-white dark:border-t-slate-800\"></div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst allData = [\r\n  { date: \"2025-03-16\", simulations: 5 },\r\n  { date: \"2025-03-17\", simulations: 7 },\r\n  { date: \"2025-03-18\", simulations: 12 },\r\n  { date: \"2025-03-19\", simulations: 9 },\r\n  { date: \"2025-03-20\", simulations: 15 },\r\n  { date: \"2025-03-21\", simulations: 18 },\r\n  { date: \"2025-03-22\", simulations: 25 },\r\n  { date: \"2025-03-23\", simulations: 30 },\r\n  { date: \"2025-03-24\", simulations: 26 },\r\n  { date: \"2025-03-25\", simulations: 29 },\r\n  { date: \"2025-03-26\", simulations: 32 },\r\n  { date: \"2025-03-27\", simulations: 35 },\r\n  { date: \"2025-03-28\", simulations: 38 },\r\n  { date: \"2025-03-29\", simulations: 40 },\r\n  { date: \"2025-03-30\", simulations: 42 },\r\n  { date: \"2025-03-31\", simulations: 45 },\r\n  { date: \"2025-04-01\", simulations: 47 },\r\n  { date: \"2025-04-02\", simulations: 50 },\r\n  { date: \"2025-04-03\", simulations: 52 },\r\n  { date: \"2025-04-04\", simulations: 60 },\r\n  { date: \"2025-04-05\", simulations: 64 },\r\n  { date: \"2025-04-06\", simulations: 67 },\r\n  { date: \"2025-04-07\", simulations: 70 },\r\n  { date: \"2025-04-08\", simulations: 74 },\r\n  { date: \"2025-04-09\", simulations: 77 },\r\n  { date: \"2025-04-10\", simulations: 79 },\r\n  { date: \"2025-04-11\", simulations: 82 },\r\n  { date: \"2025-04-12\", simulations: 85 },\r\n  { date: \"2025-04-13\", simulations: 88 },\r\n  { date: \"2025-04-14\", simulations: 90 },\r\n];\r\n\r\nexport default function SimulationTrendsChart() {\r\n  const [range, setRange] = useState(7);\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isExpanded) {\r\n      setLoading(true);\r\n      const t = setTimeout(() => setLoading(false), 2000);\r\n      return () => clearTimeout(t);\r\n    }\r\n  }, [isExpanded]);\r\n\r\n  const sliceStart = range === \"all\" ? 0 : allData.length - Number(range);\r\n  const filtered = allData.slice(sliceStart);\r\n\r\n  const chartData = {\r\n    labels: filtered.map((d) => d.date),\r\n    datasets: [\r\n      {\r\n        label: \"Simulations\",\r\n        data: filtered.map((d) => d.simulations),\r\n        borderColor: \"#3b82f6\",\r\n        backgroundColor: \"rgba(59,130,246,0.3)\",\r\n        tension: 0.4,\r\n        pointRadius: 4,\r\n        fill: true,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const currentValue = filtered[filtered.length - 1]?.simulations || 0;\r\n  const previousValue = filtered[filtered.length - 2]?.simulations || 0;\r\n  const change = currentValue - previousValue;\r\n  const percentChange = previousValue > 0 ? ((change / previousValue) * 100).toFixed(1) : 0;\r\n\r\n  return (\r\n    <div className=\"bg-white/80 backdrop-blur-sm mt-8 hover:shadow-2xl hover:shadow-violet-500/20 transition-all duration-500 px-8 py-6 dark:bg-slate-900/80 dark:backdrop-blur-sm border border-slate-200 dark:border-slate-700 rounded-3xl shadow-xl hover:scale-[1.02] hover:border-violet-300 dark:hover:border-violet-700\">\r\n      <div\r\n        className=\"flex justify-between items-center cursor-pointer mb-6 group\"\r\n        onClick={() => setIsExpanded((prev) => !prev)}\r\n        aria-expanded={isExpanded}\r\n      >\r\n        <div className=\"flex items-center gap-4\">\r\n          <div className=\"w-12 h-12 bg-gradient-to-r from-violet-500 to-cyan-500 rounded-2xl flex items-center justify-center shadow-lg group-hover:scale-110 transition-transform duration-300\">\r\n            <BarChart3 className=\"w-6 h-6 text-white\" />\r\n          </div>\r\n          <div>\r\n            <h2 className=\"text-2xl font-bold bg-gradient-to-r from-violet-600 via-cyan-600 to-emerald-600 bg-clip-text text-transparent\">\r\n              Simulation Analytics\r\n            </h2>\r\n            <p className=\"text-sm text-slate-500 dark:text-slate-400 mt-1\">\r\n              Real-time performance metrics\r\n            </p>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"flex items-center gap-4\">\r\n          {isExpanded && (\r\n            <div className=\"flex items-center gap-2 px-4 py-2 bg-gradient-to-r from-emerald-50 to-cyan-50 dark:from-emerald-900/30 dark:to-cyan-900/30 rounded-full border border-emerald-200 dark:border-emerald-800\">\r\n              <TrendingUp className=\"w-4 h-4 text-emerald-600 dark:text-emerald-400\" />\r\n              <span className=\"text-sm font-semibold text-emerald-700 dark:text-emerald-300\">\r\n                {change > 0 ? '+' : ''}{percentChange}%\r\n              </span>\r\n            </div>\r\n          )}\r\n          \r\n          <div className=\"w-10 h-10 bg-slate-100 dark:bg-slate-800 rounded-full flex items-center justify-center group-hover:bg-gradient-to-r group-hover:from-violet-100 group-hover:to-cyan-100 dark:group-hover:from-violet-900/30 dark:group-hover:to-cyan-900/30 transition-all duration-300\">\r\n            {isExpanded ? (\r\n              <ChevronUp className=\"w-5 h-5 text-slate-600 dark:text-slate-400 group-hover:text-violet-600 dark:group-hover:text-violet-400 transition-colors duration-300\" />\r\n            ) : (\r\n              <ChevronRight className=\"w-5 h-5 text-slate-600 dark:text-slate-400 group-hover:text-violet-600 dark:group-hover:text-violet-400 transition-colors duration-300\" />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        className={`transition-all duration-500 ease-out overflow-hidden ${\r\n          isExpanded ? 'max-h-[900px] opacity-100' : 'max-h-0 opacity-0'\r\n        }`}\r\n      >\r\n        {isExpanded && (\r\n          <>\r\n            <div className=\"flex flex-wrap justify-between items-center mb-6 gap-4\">\r\n              <div className=\"flex items-center gap-6\">\r\n                <div className=\"text-center\">\r\n                  <div className=\"text-3xl font-bold bg-gradient-to-r from-violet-600 to-cyan-600 bg-clip-text text-transparent\">\r\n                    {currentValue}\r\n                  </div>\r\n                  <div className=\"text-xs text-slate-500 dark:text-slate-400\">Current</div>\r\n                </div>\r\n                <div className=\"text-center\">\r\n                  <div className=\"text-xl font-semibold text-slate-700 dark:text-slate-300\">\r\n                    {Math.round(filtered.reduce((acc, curr) => acc + curr.simulations, 0) / filtered.length)}\r\n                  </div>\r\n                  <div className=\"text-xs text-slate-500 dark:text-slate-400\">Average</div>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"flex gap-2\">\r\n                {[7, 14, 30, \"all\"].map((d) => (\r\n                  <button\r\n                    key={d}\r\n                    onClick={() => setRange(d)}\r\n                    className={`px-4 py-2 text-sm rounded-full font-medium transition-all duration-300 ${\r\n                      range === d\r\n                        ? \"bg-gradient-to-r from-violet-500 to-cyan-500 text-white shadow-lg shadow-violet-500/30 scale-105\"\r\n                        : \"bg-slate-100 dark:bg-slate-800 text-slate-700 dark:text-slate-300 hover:bg-slate-200 dark:hover:bg-slate-700 hover:scale-105\"\r\n                    }`}\r\n                  >\r\n                    {d === \"all\" ? \"All Time\" : `${d}d`}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"relative w-full h-[400px] rounded-2xl overflow-hidden\">\r\n              {loading ? (\r\n                <ModernLoader height=\"h-full\" />\r\n              ) : (\r\n                <Suspense fallback={<ModernLoader height=\"h-full\" />}>\r\n                  <LineChart data={chartData} options={{}} />\r\n                </Suspense>\r\n              )}\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":["ModernLoader","_ref","height","_jsxs","className","concat","children","_jsx","style","animationDirection","LineChart","_ref2","data","options","tooltip","setTooltip","useState","show","x","y","maxValue","Math","max","datasets","minValue","min","chartWidth","chartHeight","padding","handleMouseLeave","yTicks","i","push","round","length","viewBox","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","stroke","strokeWidth","map","tick","index","textAnchor","strokeDasharray","labels","label","ceil","Date","toLocaleDateString","month","day","points","value","join","fill","cx","cy","r","onMouseMove","e","handleMouseMove","event","date","rect","currentTarget","closest","getBoundingClientRect","screenX","width","screenY","onMouseLeave","left","top","transform","allData","simulations","SimulationTrendsChart","_filtered","_filtered2","range","setRange","isExpanded","setIsExpanded","loading","setLoading","useEffect","t","setTimeout","clearTimeout","sliceStart","Number","filtered","slice","chartData","d","borderColor","backgroundColor","tension","pointRadius","currentValue","previousValue","change","percentChange","toFixed","onClick","prev","BarChart3","TrendingUp","ChevronUp","ChevronRight","_Fragment","reduce","acc","curr","Suspense","fallback"],"sourceRoot":""}