{"version":3,"file":"static/js/474.44c14c7a.chunk.js","mappings":"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","sources":["components/BillingInfo.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useStripe, useElements, CardElement } from \"@stripe/react-stripe-js\";\r\n\r\nconst CARD_ELEMENT_OPTIONS = {\r\n  style: {\r\n    base: {\r\n      fontSize: \"16px\",\r\n      color: \"#32325d\",\r\n      \"::placeholder\": {\r\n        color: \"#a0aec0\",\r\n      },\r\n      fontFamily: \"Arial, sans-serif\",\r\n      \":-webkit-autofill\": {\r\n        color: \"#32325d\",\r\n      },\r\n    },\r\n    invalid: {\r\n      color: \"#e53e3e\",\r\n    },\r\n  },\r\n};\r\n\r\nconst BillingInfo = ({ onSaveBillingInfo }) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [saving, setSaving] = useState(false);\r\n  const [toast, setToast] = useState(\"\");\r\n  const [billingAddress, setBillingAddress] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => setLoading(false), 3000);\r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n\r\n  const handleSave = async () => {\r\n    if (!billingAddress) {\r\n      setToast(\"Please fill in the billing address.\");\r\n      setTimeout(() => setToast(\"\"), 3000);\r\n      return;\r\n    }\r\n\r\n    setSaving(true);\r\n    setError(null);\r\n\r\n    if (!stripe || !elements) {\r\n      setError(\"Stripe has not loaded yet.\");\r\n      setSaving(false);\r\n      return;\r\n    }\r\n\r\n    const cardElement = elements.getElement(CardElement);\r\n\r\n    // Create payment method with Stripe\r\n    const { error: stripeError, paymentMethod } = await stripe.createPaymentMethod({\r\n      type: \"card\",\r\n      card: cardElement,\r\n      billing_details: {\r\n        address: {\r\n          line1: billingAddress,\r\n        },\r\n      },\r\n    });\r\n\r\n    if (stripeError) {\r\n      setError(stripeError.message);\r\n      setSaving(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Pass paymentMethod.id and billingAddress to your backend or parent component\r\n      await onSaveBillingInfo({\r\n        paymentMethodId: paymentMethod.id,\r\n        billingAddress,\r\n      });\r\n      setToast(\"Billing info saved successfully!\");\r\n    } catch {\r\n      setToast(\"Failed to save billing info.\");\r\n    } finally {\r\n      setSaving(false);\r\n      setTimeout(() => setToast(\"\"), 3000);\r\n    }\r\n  };\r\n\r\n  async function onSaveBillingInfo({ paymentMethodId, billingAddress }) {\r\n  const response = await fetch(\"/api/save-payment-method\", {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({\r\n      userId: \"currentUserId\", // get this from your auth/user context\r\n      paymentMethodId,\r\n      billingAddress,\r\n    }),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Error(\"Failed to save billing info\");\r\n  }\r\n\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"animate-pulse space-y-4\">\r\n        <div className=\"h-10 bg-gray-300 dark:bg-gray-700 rounded\" />\r\n        <div className=\"h-10 bg-gray-300 dark:bg-gray-700 rounded\" />\r\n        <div className=\"h-12 bg-blue-300 dark:bg-blue-700 rounded\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {toast && (\r\n        <div className=\"fixed top-5 right-5 bg-green-500 text-white px-4 py-2 rounded-lg shadow-lg z-50\">\r\n          {toast}\r\n        </div>\r\n      )}\r\n\r\n      {error && (\r\n        <div className=\"mb-4 text-red-600 font-semibold\">{error}</div>\r\n      )}\r\n\r\n      <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg border shadow-sm\">\r\n        <h4 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-6\">\r\n          Payment Method\r\n        </h4>\r\n\r\n        <div className=\"p-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700\">\r\n          <CardElement options={CARD_ELEMENT_OPTIONS} />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg border shadow-sm\">\r\n        <h4 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-6\">\r\n          Billing Address\r\n        </h4>\r\n\r\n        <input\r\n          id=\"billingAddress\"\r\n          name=\"billingAddress\"\r\n          type=\"text\"\r\n          placeholder=\"123 Main St, City, State 12345\"\r\n          value={billingAddress}\r\n          onChange={(e) => setBillingAddress(e.target.value)}\r\n          className=\"w-full p-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"flex justify-end\">\r\n        <button\r\n          onClick={handleSave}\r\n          disabled={saving}\r\n          className=\"px-8 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors font-medium\"\r\n        >\r\n          {saving ? \"Saving...\" : \"Save Billing Info\"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BillingInfo;\r\n"],"names":["CARD_ELEMENT_OPTIONS","style","base","fontSize","color","fontFamily","invalid","_ref","onSaveBillingInfo","loading","setLoading","useState","saving","setSaving","toast","setToast","billingAddress","setBillingAddress","error","setError","stripe","useStripe","elements","useElements","useEffect","timer","setTimeout","clearTimeout","_jsxs","className","children","_jsx","CardElement","options","id","name","type","placeholder","value","onChange","e","target","onClick","async","cardElement","getElement","stripeError","paymentMethod","createPaymentMethod","card","billing_details","address","line1","message","_ref2","paymentMethodId","response","fetch","method","headers","body","JSON","stringify","userId","ok","Error","json","_unused","disabled"],"sourceRoot":""}