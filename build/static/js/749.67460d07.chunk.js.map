{"version":3,"file":"static/js/749.67460d07.chunk.js","mappings":"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","sources":["services/omnis-actions.js","components/BranchingVisualization.js","components/SimulationResult.js","components/ScenarioInput.js","components/ScenarioInsightsCard.js","components/ScenarioPreview.js","components/OmnisCore.js"],"sourcesContent":["// omnis-actions.js\r\nimport { functions, auth } from \"../firebase.js\";\r\nimport { httpsCallable } from \"firebase/functions\";\r\n\r\n// Helper to ensure user is authenticated\r\nasync function ensureAuth() {\r\n  if (!auth.currentUser) {\r\n    throw new Error(\"User not authenticated\");\r\n  }\r\n}\r\n\r\n// --- State to store last generated content ---\r\nlet lastGeneratedContent = \"\";\r\nlet lastUserPrompt = \"\";\r\n\r\n/**\r\n * Generate content using Omnis Cloud Function\r\n */\r\nexport async function generateOmnisContent(userPrompt, setContent) {\r\n  if (!userPrompt) {\r\n    alert(\"Please enter a prompt!\");\r\n    return;\r\n  }\r\n\r\n  setContent(\"Generating content...\");\r\n\r\n  try {\r\n    await ensureAuth();\r\n\r\n    const callGenerateContent = httpsCallable(functions, \"generateOmnisContent\");\r\n    const result = await callGenerateContent({ prompt: userPrompt });\r\n\r\n    if (result.data.success) {\r\n      lastGeneratedContent = result.data.prediction; // Use 'prediction' instead of 'generatedContent'\r\n      lastUserPrompt = userPrompt;\r\n      setContent(lastGeneratedContent);\r\n    } else {\r\n      setContent(\"Error generating content: \" + result.data.error || \"Unknown error\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error calling generateOmnisContent:\", error);\r\n    setContent(error.message || \"Failed to generate content. Please try again.\");\r\n  }\r\n}\r\n\r\n/**\r\n * Summarize content using Omnis Cloud Function\r\n */\r\nexport async function summarizeOmnisContent(setSummary) {\r\n  if (!lastGeneratedContent || !lastUserPrompt) {\r\n    alert(\"Please generate content first before summarizing.\");\r\n    return;\r\n  }\r\n\r\n  setSummary(\"Summarizing content...\");\r\n\r\n  try {\r\n    await ensureAuth();\r\n\r\n    const callSummarizeContent = httpsCallable(functions, \"summarizeOmnisContent\");\r\n\r\n    const omniSummaryPrompt = `You are an analytical assistant for the Omnis app, summarizing life choice simulations. Your task is to provide a single, vivid, concise, and professional summary (max 2 sentences) of the following scenario and its potential outcome, highlighting the core essence of the simulated future.`;\r\n\r\n    const contentForSummarization = `Original User's Life Choice: ${lastUserPrompt}\\nSimulated Outcome Description: ${lastGeneratedContent}`;\r\n\r\n    const result = await callSummarizeContent({\r\n      text: contentForSummarization, // Use 'text' to match Cloud Function input\r\n      summaryPrompt: omniSummaryPrompt\r\n    });\r\n\r\n    if (result.data.success) {\r\n      setSummary(result.data.prediction); // Use 'prediction' instead of 'summarizedContent'\r\n    } else {\r\n      setSummary(\"Error summarizing content: \" + result.data.error || \"Unknown error\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error calling summarizeOmnisContent:\", error);\r\n    setSummary(error.message || \"Failed to summarize content. Please try again.\");\r\n  }\r\n}\r\n\r\n/**\r\n * Expand/Explain content in-depth using Omnis Cloud Function\r\n */\r\nexport async function expandOmnisText(setExpandedContent, expansionPrompt) {\r\n  if (!lastGeneratedContent) {\r\n    alert(\"Please generate content first before expanding.\");\r\n    return;\r\n  }\r\n\r\n  setExpandedContent(\"Expanding content...\");\r\n\r\n  try {\r\n    await ensureAuth();\r\n\r\n    const callExpandContent = httpsCallable(functions, \"expandOmnisContent\"); // Fix function name to match index.js\r\n\r\n    const fullExpansionPrompt =\r\n      expansionPrompt || \"Please expand and explain the following life choice simulation in detail, highlighting potential outcomes, nuances, and implications:\";\r\n\r\n    const result = await callExpandContent({\r\n      text: lastGeneratedContent,\r\n      expansionPrompt: fullExpansionPrompt\r\n    });\r\n\r\n    if (result.data.success) {\r\n      setExpandedContent(result.data.prediction); // Use 'prediction' instead of 'expandedContent'\r\n    } else {\r\n      setExpandedContent(\"Error expanding content: \" + result.data.error || \"Unknown error\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error calling expandOmnisContent:\", error);\r\n    setExpandedContent(error.message || \"Failed to expand content. Please try again.\");\r\n  }\r\n}","// BranchingVisualizationRF.js\r\nimport React, { useMemo, useState } from \"react\";\r\nimport ReactFlow, {\r\n  ReactFlowProvider,\r\n  MiniMap,\r\n  Controls,\r\n  Background,\r\n} from \"reactflow\";\r\nimport \"reactflow/dist/style.css\";\r\n\r\nconst layouts = [\"tree\", \"network\", \"force\"];\r\n\r\n// Placeholder datasets\r\nconst placeholders = {\r\n  tree: {\r\n    nodes: [\r\n      { id: \"1\", label: \"Root\", x: 250, y: 20, color: \"#fca5a5\" },\r\n      { id: \"2\", label: \"Branch A\", x: 150, y: 120, color: \"#93c5fd\" },\r\n      { id: \"3\", label: \"Branch B\", x: 350, y: 120, color: \"#93c5fd\" },\r\n      { id: \"4\", label: \"Leaf A1\", x: 100, y: 220, color: \"#86efac\" },\r\n      { id: \"5\", label: \"Leaf B1\", x: 400, y: 220, color: \"#86efac\" },\r\n    ],\r\n    edges: [\r\n      { source: \"1\", target: \"2\" },\r\n      { source: \"1\", target: \"3\" },\r\n      { source: \"2\", target: \"4\" },\r\n      { source: \"3\", target: \"5\" },\r\n    ],\r\n  },\r\n\r\n  network: {\r\n    nodes: [\r\n      { id: \"1\", label: \"Hub\", x: 250, y: 150, color: \"#fca5a5\" },\r\n      { id: \"2\", label: \"Node A\", x: 100, y: 50, color: \"#93c5fd\" },\r\n      { id: \"3\", label: \"Node B\", x: 400, y: 50, color: \"#93c5fd\" },\r\n      { id: \"4\", label: \"Node C\", x: 100, y: 250, color: \"#86efac\" },\r\n      { id: \"5\", label: \"Node D\", x: 400, y: 250, color: \"#fcd34d\" },\r\n    ],\r\n    edges: [\r\n      { source: \"1\", target: \"2\" },\r\n      { source: \"1\", target: \"3\" },\r\n      { source: \"1\", target: \"4\" },\r\n      { source: \"1\", target: \"5\" },\r\n      { source: \"2\", target: \"3\" },\r\n      { source: \"4\", target: \"5\" },\r\n    ],\r\n  },\r\n\r\n  force: {\r\n    nodes: [\r\n      { id: \"1\", label: \"Center\", x: 250, y: 150, color: \"#fca5a5\" },\r\n      { id: \"2\", label: \"Orbit 1\", x: 100, y: 100, color: \"#93c5fd\" },\r\n      { id: \"3\", label: \"Orbit 2\", x: 400, y: 100, color: \"#86efac\" },\r\n      { id: \"4\", label: \"Orbit 3\", x: 100, y: 250, color: \"#fcd34d\" },\r\n      { id: \"5\", label: \"Orbit 4\", x: 400, y: 250, color: \"#a78bfa\" },\r\n    ],\r\n    edges: [\r\n      { source: \"1\", target: \"2\" },\r\n      { source: \"1\", target: \"3\" },\r\n      { source: \"1\", target: \"4\" },\r\n      { source: \"1\", target: \"5\" },\r\n    ],\r\n  },\r\n};\r\n\r\nexport default function BranchingVisualizationRF({ data, defaultLayout = \"tree\" }) {\r\n  const [activeLayout, setActiveLayout] = useState(defaultLayout);\r\n\r\n  // Choose backend data if available, else placeholder\r\n  const graphData =\r\n    data && data.nodes?.length ? data : placeholders[activeLayout];\r\n\r\n  const nodes = useMemo(() => {\r\n    return graphData.nodes.map((n, idx) => ({\r\n      id: String(n.id || idx),\r\n      position: { x: n.x || Math.random() * 400, y: n.y || Math.random() * 400 },\r\n      data: { label: n.label || `Node ${idx}` },\r\n      style: {\r\n        backgroundColor: n.color || \"#93c5fd\",\r\n        borderRadius: \"8px\",\r\n        padding: \"6px 8px\",\r\n        fontSize: \"0.8rem\",\r\n        minWidth: \"60px\",\r\n        textAlign: \"center\",\r\n      },\r\n    }));\r\n  }, [graphData]);\r\n\r\n  const edges = useMemo(() => {\r\n    return graphData.edges.map((e, idx) => ({\r\n      id: `e-${idx}`,\r\n      source: String(e.source),\r\n      target: String(e.target),\r\n      type: \"smoothstep\",\r\n      animated: true,\r\n      style: { stroke: e.color || \"#6366f1\" },\r\n    }));\r\n  }, [graphData]);\r\n\r\n  return (\r\n    <div className=\"p-2 sm:p-4 w-full h-[80vh] flex flex-col\">\r\n      {/* Tabs */}\r\n      <div className=\"flex gap-2 mb-3 flex-wrap\">\r\n        {layouts.map((layout) => (\r\n          <button\r\n            key={layout}\r\n            onClick={() => setActiveLayout(layout)}\r\n            className={`px-3 py-1 rounded-lg text-xs sm:text-sm font-medium transition-colors ${\r\n              activeLayout === layout\r\n                ? \"bg-indigo-500 text-white shadow\"\r\n                : \"bg-gray-200 text-gray-700 hover:bg-gray-300\"\r\n            }`}\r\n          >\r\n            {layout.toUpperCase()}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Legend */}\r\n      <div className=\"flex flex-wrap gap-3 mb-2 text-xs sm:text-sm\">\r\n        <div className=\"flex items-center gap-1\">\r\n          <span className=\"w-3 h-3 bg-red-300 rounded-full\" /> Root / Hub / Center\r\n        </div>\r\n        <div className=\"flex items-center gap-1\">\r\n          <span className=\"w-3 h-3 bg-blue-300 rounded-full\" /> Branch / Node\r\n        </div>\r\n        <div className=\"flex items-center gap-1\">\r\n          <span className=\"w-3 h-3 bg-green-300 rounded-full\" /> Leaf / Orbit\r\n        </div>\r\n      </div>\r\n\r\n      {/* Graph View */}\r\n      <div className=\"flex-1 border rounded-2xl overflow-hidden shadow min-h-[60vh] sm:min-h-[70vh]\">\r\n        <ReactFlowProvider>\r\n          <ReactFlow\r\n            nodes={nodes}\r\n            edges={edges}\r\n            fitView\r\n            nodesDraggable={true}\r\n            elementsSelectable={true}\r\n            proOptions={{ hideAttribution: true }}\r\n          >\r\n            <MiniMap zoomable pannable />\r\n            <Controls showInteractive />\r\n            <Background gap={12} />\r\n          </ReactFlow>\r\n        </ReactFlowProvider>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect , useRef } from \"react\";\r\nimport { FiThumbsUp, FiThumbsDown, FiHelpCircle, FiX, FiGitBranch, FiLock } from \"react-icons/fi\";\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\n// Simple Branching Visualization Component\r\nimport BranchingVisualization from \"./BranchingVisualization\";\r\nimport { generateOmnisContent, expandOmnisText } from \"../services/omnis-actions\";\r\n\r\nconst ScenarioSimulationCard = ({ results, setResults, loading, simulationInput }) => {\r\n  // Mock the useOmnisContext hook since it's not available\r\n  const addFeedback = (timestamp, feedback) => {\r\n    console.log(`Adding feedback: ${timestamp} - ${feedback}`);\r\n  };\r\n const [toastMessage, setToastMessage] = useState(null);\r\n  const [clickedButtons, setClickedButtons] = useState({});\r\n  const [localResults, setLocalResults] = useState(results || []);\r\n  const [rawResults, setRawResults] = useState({}); // Store raw results from /run\r\n  const [narrativeCache, setNarrativeCache] = useState({}); // Cache narratives\r\n  const [explanationModal, setExplanationModal] = useState({\r\n    isOpen: false,\r\n    content: '',\r\n    loading: false,\r\n    error: null,\r\n    timestamp: null\r\n  });\r\n\r\n  // NEW: Branching modal state\r\n  const [showBranchingModal, setShowBranchingModal] = useState(false);\r\n  const [branchingData, setBranchingData] = useState(null);\r\n  const [isBranchingLoading, setIsBranchingLoading] = useState(false);\r\n\r\n  // Text-to-speech state\r\n  const [speechState, setSpeechState] = useState({\r\n    isSpeaking: false,\r\n    selectedVoice: null,\r\n    speechRate: 1,\r\n    availableVoices: [],\r\n    currentSentenceIndex: -1,\r\n    sentences: []\r\n  });\r\n\r\n  // Export and tagging state\r\n  const [exportState, setExportState] = useState({\r\n    showTagInput: false,\r\n    customTags: '',\r\n    suggestedTags: []\r\n  });\r\n\r\n  // Mobile modal state - Updated for better mobile handling\r\n  const [modalState, setModalState] = useState({\r\n    currentSection: 'content', // 'controls', 'content', 'export'\r\n    isMobile: false,\r\n    showFullscreenMode: false\r\n  });\r\n\r\n  const handleExportReportClick = () => {\r\n    setToastMessage(\"Branching paths under development, try again soon.\");\r\n    setTimeout(() => setToastMessage(\"\"), 4000);\r\n  };\r\n  // NEW: Handle explore branches functionality\r\n  const handleExploreBranches = async () => {\r\n    try {\r\n      setIsBranchingLoading(true);\r\n      const response = await fetch(\"http://localhost:8000/branch\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          scenario: simulationInput,\r\n          num_paths: 6,\r\n        }),\r\n      });\r\n      \r\n      const reader = response.body.getReader();\r\n      const decoder = new TextDecoder(\"utf-8\");\r\n      let fullText = \"\";\r\n      \r\n      while (true) {\r\n        const { done, value } = await reader.read();\r\n        if (done) break;\r\n        fullText += decoder.decode(value);\r\n      }\r\n      \r\n      const lines = fullText.split(\"data: \").filter(Boolean);\r\n      const parsedResults = lines.map(line => JSON.parse(line.trim()));\r\n      \r\n      const toTree = (nodes, index = 0) => {\r\n        const base = nodes[index];\r\n        const children = nodes.slice(index + 1).map((n, i) => ({\r\n          ...n,\r\n          children: [],\r\n          summary: n.label,\r\n          recommended: n.recommended,\r\n          anomaly: n.anomaly_flagged,\r\n        }));\r\n        return {\r\n          summary: base.label,\r\n          recommended: base.recommended,\r\n          anomaly: base.anomaly_flagged,\r\n          children,\r\n        };\r\n      };\r\n      \r\n      const rootNode = toTree(parsedResults);\r\n      setBranchingData(rootNode);\r\n      setShowBranchingModal(true);\r\n    } catch (err) {\r\n      console.error(\"Branching error:\", err);\r\n    } finally {\r\n      setIsBranchingLoading(false);\r\n    }\r\n  };\r\n\r\n   useEffect(() => {\r\n    if (toastMessage) {\r\n      const timer = setTimeout(() => {\r\n        setToastMessage(null);\r\n      }, 3000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [toastMessage]);\r\n\r\n  // Load available voices and detect screen size\r\n  useEffect(() => {\r\n    const loadVoices = () => {\r\n      const voices = window.speechSynthesis?.getVoices() || [];\r\n      const englishVoices = voices.filter(voice => voice.lang.startsWith('en'));\r\n      setSpeechState(prev => ({\r\n        ...prev,\r\n        availableVoices: englishVoices,\r\n        selectedVoice: englishVoices.find(voice => voice.default) || englishVoices[0] || null\r\n      }));\r\n    };\r\n\r\n    const checkScreenSize = () => {\r\n      const isMobile = window.innerWidth < 768;\r\n      setModalState(prev => ({ ...prev, isMobile }));\r\n    };\r\n\r\n    loadVoices();\r\n    checkScreenSize();\r\n    \r\n    if (window.speechSynthesis) {\r\n      window.speechSynthesis.addEventListener('voiceschanged', loadVoices);\r\n    }\r\n    \r\n    window.addEventListener('resize', checkScreenSize);\r\n\r\n    return () => {\r\n      if (window.speechSynthesis) {\r\n        window.speechSynthesis.removeEventListener('voiceschanged', loadVoices);\r\n      }\r\n      window.removeEventListener('resize', checkScreenSize);\r\n    };\r\n  }, []);\r\n\r\n  // Update local results when props change\r\n  useEffect(() => {\r\n    setLocalResults(results || []);\r\n    \r\n    // Store raw results for later narration\r\n    if (results && Array.isArray(results)) {\r\n      const rawData = {};\r\n      results.forEach((result, index) => {\r\n        const timestamp = result?.timestamp || index;\r\n        rawData[timestamp] = result;\r\n      });\r\n      setRawResults(rawData);\r\n    }\r\n  }, [results]);\r\n\r\n  // Text-to-speech functions\r\n  function splitIntoSentences(text) {\r\n    // Clean the text and split into sentences\r\n    const cleanText = text.replace(/\\*\\*(.*?)\\*\\*/g, '$1').replace(/\\n+/g, ' ');\r\n    const sentences = cleanText.match(/[^\\.!?]+[\\.!?]+/g) || [cleanText];\r\n    return sentences.map(s => s.trim()).filter(s => s.length > 0);\r\n  }\r\n\r\n  function generateSuggestedTags(content, result) {\r\n    const tags = [];\r\n    \r\n    // Time-based tags\r\n    const now = new Date();\r\n    const quarter = Math.ceil((now.getMonth() + 1) / 3);\r\n    tags.push(`#Q${quarter}`, `#${now.getFullYear()}`);\r\n    \r\n    // Content-based tags\r\n    const lowerContent = content.toLowerCase();\r\n    if (lowerContent.includes('cost') || lowerContent.includes('saving') || lowerContent.includes('budget')) {\r\n      tags.push('#cost-savings');\r\n    }\r\n    if (lowerContent.includes('risk') || lowerContent.includes('threat')) {\r\n      tags.push('#risk-analysis');\r\n    }\r\n    if (lowerContent.includes('recommend') || lowerContent.includes('suggest')) {\r\n      tags.push('#recommendations');\r\n    }\r\n    if (lowerContent.includes('predict') || lowerContent.includes('forecast')) {\r\n      tags.push('#predictions');\r\n    }\r\n    if (lowerContent.includes('anomaly') || lowerContent.includes('unusual')) {\r\n      tags.push('#anomaly-detection');\r\n    }\r\n    \r\n    // Confidence-based tags\r\n    if (lowerContent.includes('uncertain') || lowerContent.includes('might') || lowerContent.includes('possibly')) {\r\n      tags.push('#low-confidence');\r\n    } else if (lowerContent.includes('certain') || lowerContent.includes('definitely') || lowerContent.includes('confirmed')) {\r\n      tags.push('#high-confidence');\r\n    }\r\n    \r\n    // Result-based tags\r\n    if (result?.error) {\r\n      tags.push('#error', '#needs-review');\r\n    } else if (result?.response?.task) {\r\n      const task = result.response.task.toLowerCase();\r\n      if (task.includes('analysis')) tags.push('#analysis');\r\n      if (task.includes('optimization')) tags.push('#optimization');\r\n      if (task.includes('simulation')) tags.push('#simulation');\r\n    }\r\n    \r\n    return [...new Set(tags)]; // Remove duplicates\r\n  }\r\n\r\n  function speakNarrative(text) {\r\n    if (!window.speechSynthesis) {\r\n      alert(\"Your browser doesn't support speech synthesis.\");\r\n      return;\r\n    }\r\n    \r\n    // Stop any current speech\r\n    window.speechSynthesis.cancel();\r\n    \r\n    // Split into sentences and prepare for highlighting\r\n    const sentences = splitIntoSentences(text);\r\n    setSpeechState(prev => ({ ...prev, sentences, currentSentenceIndex: 0 }));\r\n    \r\n    let currentIndex = 0;\r\n    \r\n    function speakSentence(index) {\r\n      if (index >= sentences.length) {\r\n        setSpeechState(prev => ({ ...prev, isSpeaking: false, currentSentenceIndex: -1 }));\r\n        return;\r\n      }\r\n      \r\n      setSpeechState(prev => ({ ...prev, currentSentenceIndex: index }));\r\n      \r\n      const utterance = new SpeechSynthesisUtterance(sentences[index]);\r\n      utterance.lang = \"en-US\";\r\n      utterance.rate = speechState.speechRate;\r\n      utterance.pitch = 1;\r\n      \r\n      if (speechState.selectedVoice) {\r\n        utterance.voice = speechState.selectedVoice;\r\n      }\r\n      \r\n      utterance.onend = () => {\r\n        speakSentence(index + 1);\r\n      };\r\n      \r\n      utterance.onerror = () => {\r\n        setSpeechState(prev => ({ ...prev, isSpeaking: false, currentSentenceIndex: -1 }));\r\n      };\r\n      \r\n      window.speechSynthesis.speak(utterance);\r\n    }\r\n    \r\n    setSpeechState(prev => ({ ...prev, isSpeaking: true }));\r\n    speakSentence(0);\r\n  }\r\n\r\n  function stopNarration() {\r\n    window.speechSynthesis.cancel();\r\n    setSpeechState(prev => ({ ...prev, isSpeaking: false, currentSentenceIndex: -1 }));\r\n  }\r\n\r\n  function exportAsMarkdown(content, tags = [], result = null) {\r\n    const timestamp = new Date().toISOString();\r\n    const query = result?.query || 'Unknown Query';\r\n    \r\n    const markdown = `# Scenario Analysis Report\r\n\r\n**Query:** ${query}\r\n**Generated:** ${new Date().toLocaleString()}\r\n**Tags:** ${tags.join(' ')}\r\n\r\n---\r\n\r\n## Detailed Explanation\r\n\r\n${content}\r\n\r\n---\r\n\r\n## Raw Data\r\n\\`\\`\\`json\r\n${JSON.stringify(result, null, 2)}\r\n\\`\\`\\`\r\n\r\n---\r\n*Generated by Scenario Simulation Tool*\r\n`;\r\n\r\n    const blob = new Blob([markdown], { type: 'text/markdown' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = `scenario-report-${timestamp.split('T')[0]}.md`;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    URL.revokeObjectURL(url);\r\n  }\r\n\r\n  function exportAsPDF(content, tags = [], result = null) {\r\n    // Create a printable HTML version\r\n    const timestamp = new Date().toISOString();\r\n    const query = result?.query || 'Unknown Query';\r\n    \r\n    const htmlContent = `\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Scenario Analysis Report</title>\r\n    <style>\r\n        body { font-family: Arial, sans-serif; max-width: 800px; margin: 0 auto; padding: 20px; line-height: 1.6; }\r\n        .header { border-bottom: 2px solid #333; padding-bottom: 20px; margin-bottom: 30px; }\r\n        .tags { background: #f5f5f5; padding: 10px; border-radius: 5px; margin: 10px 0; }\r\n        .tag { background: #007acc; color: white; padding: 2px 8px; border-radius: 3px; margin-right: 5px; font-size: 0.9em; }\r\n        .content { margin: 20px 0; }\r\n        .raw-data { background: #f8f8f8; padding: 15px; border-radius: 5px; font-family: monospace; font-size: 0.9em; }\r\n        @media print {\r\n            body { print-color-adjust: exact; }\r\n            .no-print { display: none; }\r\n        }\r\n    </style>\r\n</head>\r\n<body>\r\n    <div class=\"header\">\r\n        <h1>Scenario Analysis Report</h1>\r\n        <p><strong>Query:</strong> ${query}</p>\r\n        <p><strong>Generated:</strong> ${new Date().toLocaleString()}</p>\r\n        <div class=\"tags\">\r\n            <strong>Tags:</strong> ${tags.map(tag => `<span class=\"tag\">${tag}</span>`).join('')}\r\n        </div>\r\n    </div>\r\n    \r\n    <div class=\"content\">\r\n        <h2>Detailed Explanation</h2>\r\n        <div>${content.replace(/\\n/g, '<br>')}</div>\r\n    </div>\r\n    \r\n    <div class=\"raw-data\">\r\n        <h3>Raw Data</h3>\r\n        <pre>${JSON.stringify(result, null, 2)}</pre>\r\n    </div>\r\n    \r\n    <div style=\"margin-top: 40px; padding-top: 20px; border-top: 1px solid #ccc; color: #666; font-size: 0.9em;\">\r\n        <em>Generated by Scenario Simulation Tool</em>\r\n    </div>\r\n</body>\r\n</html>`;\r\n\r\n    const newWindow = window.open('', '_blank');\r\n    newWindow.document.write(htmlContent);\r\n    newWindow.document.close();\r\n    newWindow.print();\r\n  }\r\n\r\n  const handleReset = () => {\r\n    // Simply clear the local results to hide the component content\r\n    setLocalResults([]);\r\n    if (setResults) {\r\n      setResults([]);\r\n    }\r\n  };\r\n\r\n  const handleExplainFurther = async (result, timestamp) => {\r\n    // Check cache first\r\n    if (narrativeCache[timestamp]) {\r\n      const tags = generateSuggestedTags(narrativeCache[timestamp], result);\r\n      setExportState(prev => ({ ...prev, suggestedTags: tags }));\r\n      setExplanationModal({\r\n        isOpen: true,\r\n        content: narrativeCache[timestamp],\r\n        loading: false,\r\n        error: null,\r\n        timestamp: timestamp\r\n      });\r\n      return;\r\n    }\r\n\r\n    setExplanationModal({\r\n      isOpen: true,\r\n      content: '',\r\n      loading: true,\r\n      error: null,\r\n      timestamp: timestamp\r\n    });\r\n\r\n    try {\r\n      // Get the raw result data\r\n      const rawResult = rawResults[timestamp] || result;\r\n      \r\n      const response = await fetch('http://localhost:8000/narrate', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(result.response)\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      const narrative = data.narrative || data.explanation || data.message || 'No explanation provided.';\r\n      \r\n      // Generate suggested tags\r\n      const tags = generateSuggestedTags(narrative, result);\r\n      setExportState(prev => ({ ...prev, suggestedTags: tags }));\r\n      \r\n      // Cache the narrative\r\n      setNarrativeCache(prev => ({\r\n        ...prev,\r\n        [timestamp]: narrative\r\n      }));\r\n      \r\n      setExplanationModal(prev => ({\r\n        ...prev,\r\n        loading: false,\r\n        content: narrative,\r\n        error: null\r\n      }));\r\n    } catch (error) {\r\n      console.error('Error fetching explanation:', error);\r\n      setExplanationModal(prev => ({\r\n        ...prev,\r\n        loading: false,\r\n        error: `Failed to fetch explanation: ${error.message}`,\r\n        content: ''\r\n      }));\r\n    }\r\n  };\r\n\r\n  const closeModal = () => {\r\n    // Stop any ongoing speech when closing modal\r\n    stopNarration();\r\n    setExplanationModal({\r\n      isOpen: false,\r\n      content: '',\r\n      loading: false,\r\n      error: null,\r\n      timestamp: null\r\n    });\r\n    setExportState({\r\n      showTagInput: false,\r\n      customTags: '',\r\n      suggestedTags: []\r\n    });\r\n    setModalState(prev => ({ \r\n      ...prev, \r\n      currentSection: 'content',\r\n      showFullscreenMode: false \r\n    }));\r\n  };\r\n\r\n  const navigateModalSection = (direction) => {\r\n    const sections = ['controls', 'content', 'export'];\r\n    const currentIndex = sections.indexOf(modalState.currentSection);\r\n    let newIndex;\r\n    \r\n    if (direction === 'next') {\r\n      newIndex = (currentIndex + 1) % sections.length;\r\n    } else {\r\n      newIndex = currentIndex === 0 ? sections.length - 1 : currentIndex - 1;\r\n    }\r\n    \r\n    setModalState(prev => ({ ...prev, currentSection: sections[newIndex] }));\r\n  };\r\n\r\n  const toggleFullscreen = () => {\r\n    setModalState(prev => ({ ...prev, showFullscreenMode: !prev.showFullscreenMode }));\r\n  };\r\n\r\n  // NEW: State for generated content and expanded content\r\n  const [generatedContent, setGeneratedContent] = useState(\"\");\r\n  const [expandedContent, setExpandedContent] = useState(\"\");\r\n\r\n  // --- Hook up generateOmnisContent to display result in output component ---\r\n  useEffect(() => {\r\n    if (simulationInput) {\r\n      generateOmnisContent(simulationInput, (content) => {\r\n        setGeneratedContent(content);\r\n        // Optionally update localResults to show in output card\r\n        setLocalResults([{ query: simulationInput, response: { result: content, task: \"Generated Content\" }, timestamp: Date.now() }]);\r\n        if (setResults) setResults([{ query: simulationInput, response: { result: content, task: \"Generated Content\" }, timestamp: Date.now() }]);\r\n      });\r\n    }\r\n  }, [simulationInput]);\r\n\r\n  // --- Hook up expandOmnisText to Expand button ---\r\n  const handleExpandClick = (result, timestamp) => {\r\n    setExplanationModal({\r\n      isOpen: true,\r\n      content: '',\r\n      loading: true,\r\n      error: null,\r\n      timestamp: timestamp\r\n    });\r\n\r\n    expandOmnisText((expanded) => {\r\n      setExpandedContent(expanded);\r\n      setExplanationModal(prev => ({\r\n        ...prev,\r\n        loading: false,\r\n        content: expanded,\r\n        error: null\r\n      }));\r\n    });\r\n  };\r\n\r\n  if (!localResults || localResults.length === 0) {\r\n    return (\r\n      <div className=\"bg-gradient-to-br from-white to-slate-50 dark:from-slate-900 dark:to-slate-800 shadow-xl border border-slate-200 dark:border-slate-700 hover:shadow-2xl hover:shadow-blue-500/20 rounded-2xl p-8 text-slate-900 dark:text-white transition-all duration-300\">\r\n        <div className=\"flex items-center gap-3 mb-6\">\r\n          <div className=\"w-10 h-10 bg-gradient-to-r from-emerald-500 to-teal-500 rounded-xl flex items-center justify-center shadow-lg\">\r\n            <span className=\"text-white font-bold\">⚡</span>\r\n          </div>\r\n          <h2 className=\"text-2xl font-bold bg-gradient-to-r from-emerald-600 to-teal-600 bg-clip-text text-transparent\">Scenario Output</h2>\r\n        </div>\r\n        <div className=\"text-center py-8\">\r\n          <div className=\"w-16 h-16 bg-slate-100 dark:bg-slate-800 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n            <span className=\"text-2xl opacity-50\">📊</span>\r\n          </div>\r\n          <p className=\"text-slate-500 dark:text-slate-400 text-lg\">No results to display.</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const handleFeedback = (timestamp, feedback) => {\r\n    if (!timestamp) return;\r\n\r\n    setClickedButtons((prev) => ({ ...prev, [timestamp]: feedback }));\r\n\r\n    setTimeout(() => {\r\n      setClickedButtons((prev) => {\r\n        const copy = { ...prev };\r\n        delete copy[timestamp];\r\n        return copy;\r\n      });\r\n    }, 5000);\r\n\r\n    addFeedback(timestamp, feedback);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"bg-gradient-to-br from-white to-slate-50 dark:from-slate-900 dark:to-slate-800 shadow-xl border border-slate-200 dark:border-slate-700 rounded-2xl p-8 text-slate-900 dark:text-white\">\r\n        <div className=\"flex items-center gap-3 mb-6\">\r\n          <div className=\"w-10 h-10 bg-gradient-to-r from-blue-500 to-purple-500 rounded-xl flex items-center justify-center shadow-lg animate-pulse\">\r\n            <span className=\"text-white font-bold\">⚡</span>\r\n          </div>\r\n          <h2 className=\"text-2xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent\">Scenario Output</h2>\r\n        </div>\r\n        <div className=\"space-y-4 mt-4\">\r\n          {[...Array(3)].map((_, i) => (\r\n            <div\r\n              key={i}\r\n              className=\"animate-pulse flex flex-col space-y-3 bg-white/50 dark:bg-slate-800/50 backdrop-blur-sm rounded-xl p-6 border border-slate-200/50 dark:border-slate-700/50\"\r\n            >\r\n              <div className=\"h-5 bg-slate-300 dark:bg-slate-600 rounded-lg w-2/3\" />\r\n              <div className=\"h-4 bg-slate-200 dark:bg-slate-700 rounded-lg w-full\" />\r\n              <div className=\"h-4 bg-slate-200 dark:bg-slate-700 rounded-lg w-5/6\" />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"bg-gradient-to-br from-white to-slate-50 dark:from-slate-900 dark:to-slate-800 shadow-xl hover:shadow-2xl hover:shadow-blue-500/20 dark:border-slate-700 rounded-2xl p-8 border border-slate-200 text-slate-900 dark:text-white col-span-2 w-full transition-all duration-300\">\r\n        <div className=\"flex items-center justify-between mb-6\">\r\n          <div className=\"flex items-center gap-3\">\r\n            <div className=\"w-10 h-10 bg-gradient-to-r from-emerald-500 to-teal-500 rounded-xl flex items-center justify-center shadow-lg\">\r\n              <span className=\"text-white font-bold\">⚡</span>\r\n            </div>\r\n            <h2 className=\"text-2xl font-bold bg-gradient-to-r from-emerald-600 to-teal-600 bg-clip-text text-transparent\">Scenario Output</h2>\r\n          </div>\r\n          <div className=\"flex items-center gap-3\">\r\n            \r\n            {/* Responsive Reset Button */}\r\n            <button \r\n              onClick={() => handleReset()}\r\n              className=\"group relative flex items-center gap-1 sm:gap-2 px-2 py-1.5 sm:px-4 sm:py-2 lg:px-5 lg:py-2.5 bg-gradient-to-r from-rose-500 to-pink-500 hover:from-rose-600 hover:to-pink-600 text-white rounded-lg sm:rounded-xl font-medium text-xs sm:text-sm lg:text-base transition-all duration-200 shadow-lg hover:shadow-xl transform hover:scale-105 active:scale-95\"\r\n              aria-label=\"Remove scenario simulation results\"\r\n            >\r\n              <span className=\"text-xs sm:text-sm\">🔄</span>\r\n              <span className=\"whitespace-nowrap\">Reset</span>\r\n              <div className=\"absolute inset-0 rounded-lg sm:rounded-xl bg-gradient-to-r from-rose-400/20 to-pink-400/20 opacity-0 group-hover:opacity-100 transition-opacity animate-pulse\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"max-h-96 overflow-y-auto scrollbar-thin scrollbar-thumb-slate-400 scrollbar-track-slate-200 dark:scrollbar-thumb-slate-600 dark:scrollbar-track-slate-800 space-y-4 pr-2\">\r\n          {/* Show generated content in output card */}\r\n          {generatedContent && (\r\n            <div className=\"bg-white/70 dark:bg-slate-800/70 backdrop-blur-sm p-6 rounded-xl shadow-lg border border-slate-200/50 dark:border-slate-700/50\">\r\n              <h4 className=\"text-lg font-semibold text-slate-800 dark:text-slate-200 mb-3 flex items-center gap-2\">\r\n                <div className=\"w-2 h-2 bg-gradient-to-r from-blue-500 to-purple-500 rounded-full\"></div>\r\n                Generated Scenario\r\n              </h4>\r\n              <div className=\"text-sm text-slate-600 dark:text-slate-300 mt-2\">\r\n                {generatedContent}\r\n              </div>\r\n              {/* Expand button */}\r\n              <button\r\n                aria-label=\"Expand\"\r\n                className=\"group relative flex items-center justify-center gap-1 px-3 py-2 rounded-lg font-medium text-xs transition-all duration-200 transform hover:scale-105 shadow-md hover:shadow-lg bg-blue-500 hover:bg-blue-600 text-white mt-4\"\r\n                onClick={() => handleExpandClick({ response: { result: generatedContent, task: \"Generated Content\" } }, Date.now())}\r\n              >\r\n                <FiHelpCircle className=\"text-sm\" />\r\n                <span>Expand</span>\r\n              </button>\r\n            </div>\r\n          )}\r\n          {localResults.filter(Boolean).map((result, index) => {\r\n            const timestamp = result?.timestamp || index;\r\n            return (\r\n              <div key={timestamp} className=\"bg-white/70 dark:bg-slate-800/70 backdrop-blur-sm p-6 rounded-xl shadow-lg border border-slate-200/50 dark:border-slate-700/50 hover:border-slate-300 dark:hover:border-slate-600 hover:shadow-xl transition-all duration-300 transform hover:scale-[1.02]\">\r\n                <h4 className=\"text-lg font-semibold text-slate-800 dark:text-slate-200 mb-3 flex items-center gap-2\">\r\n                  <div className=\"w-2 h-2 bg-gradient-to-r from-blue-500 to-purple-500 rounded-full\"></div>\r\n                  {result?.query || \"Unknown Query\"}\r\n                </h4>\r\n                {result?.error ? (\r\n                  <div className=\"flex items-center gap-2 p-3 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg\">\r\n                    <span className=\"text-red-500\">❌</span>\r\n                    <p className=\"text-red-600 dark:text-red-400 text-sm font-medium\">{result.error}</p>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"text-sm text-slate-600 dark:text-slate-300 mt-2\">\r\n                    {formatResponse(result?.response)}\r\n                  </div>\r\n                )}\r\n\r\n                {/* Responsive Action Buttons */}\r\n                <div className=\"flex flex-col sm:flex-row justify-start gap-2 sm:gap-3 mt-4 pt-4 border-t border-slate-200/50 dark:border-slate-700/50\">\r\n                  <button\r\n                    aria-label=\"Give positive feedback\"\r\n                    className=\"flex items-center justify-center gap-1 sm:gap-2 px-3 py-2 sm:px-4 sm:py-2 lg:px-5 lg:py-2.5 rounded-lg sm:rounded-xl font-medium text-xs sm:text-sm lg:text-base transition-all duration-200 transform hover:scale-105 shadow-md hover:shadow-lg text-green-600 hover:bg-green-50 dark:hover:bg-green-900/20\"\r\n                    onClick={() => handleFeedback(timestamp, \"positive\")}\r\n                  >\r\n                    <FiThumbsUp className=\"text-sm sm:text-lg\" />\r\n                    <span className=\"sm:hidden\"></span>\r\n                  </button>\r\n                  \r\n                  <button\r\n                    aria-label=\"Give negative feedback\"\r\n                    className=\"flex items-center justify-center gap-1 sm:gap-2 px-3 py-2 sm:px-4 sm:py-2 lg:px-5 lg:py-2.5 rounded-lg sm:rounded-xl font-medium text-xs sm:text-sm lg:text-base transition-all duration-200 transform hover:scale-105 shadow-md hover:shadow-lg text-red-600 hover:bg-red-50 dark:hover:bg-red-900/20\"\r\n                    onClick={() => handleFeedback(timestamp, \"negative\")}\r\n                  >\r\n                    <FiThumbsDown className=\"text-sm sm:text-lg\" />\r\n                    <span className=\"sm:hidden\"></span>\r\n                  </button>\r\n                  \r\n                  {/* Responsive Explain Button */}\r\n                  <button\r\n                    aria-label=\"Explain further\"\r\n                    className={`group relative flex items-center justify-center gap-1 sm:gap-2 px-3 py-2 sm:px-4 sm:py-2 lg:px-5 lg:py-2.5 rounded-lg sm:rounded-xl font-medium text-xs sm:text-sm lg:text-base transition-all duration-200 transform hover:scale-105 shadow-md hover:shadow-lg flex-1 sm:flex-none ${\r\n                      narrativeCache[timestamp] \r\n                        ? \"bg-indigo-500 hover:bg-indigo-600 text-white\" \r\n                        : \"bg-blue-500 hover:bg-blue-600 text-white\"\r\n                    }`}\r\n                    onClick={() => handleExplainFurther(result, timestamp)}\r\n                  >\r\n                    <FiHelpCircle className=\"text-sm sm:text-lg flex-shrink-0\" />\r\n                    <span className=\"whitespace-nowrap truncate\">\r\n                      {narrativeCache[timestamp] ? \"View Explanation\" : \"Explain\"}\r\n                    </span>\r\n                    <div className=\"absolute inset-0 rounded-lg sm:rounded-xl bg-gradient-to-r from-blue-400/20 to-indigo-400/20 opacity-0 group-hover:opacity-100 transition-opacity animate-pulse\" />\r\n                  </button>\r\n                  \r\n                  {/* Responsive Branch Button + Toast above it */}\r\n                  <div className=\"relative flex flex-col items-center\">\r\n                    {/* Toast notification appears above the branch button */}\r\n                    <AnimatePresence>\r\n                      {toastMessage && (\r\n                        <motion.div\r\n                          key=\"toast\"\r\n                          initial={{ opacity: 0, y: 10, scale: 0.95 }}\r\n                          animate={{ opacity: 1, y: 0, scale: 1 }}\r\n                          exit={{ opacity: 0, y: 10, scale: 0.95 }}\r\n                          transition={{ duration: 0.3, type: \"spring\", stiffness: 300 }}\r\n                          className=\"z-[1000]\"\r\n                          style={{\r\n                            position: \"absolute\",\r\n                            bottom: \"100%\",\r\n                            left: \"50%\",\r\n                            transform: \"translateX(-50%) translateY(-25px)\",\r\n                            marginBottom: \"0.5rem\",\r\n                          }}\r\n                        >\r\n                          <div className=\"bg-white/90 dark:bg-slate-800/90 backdrop-blur-xl border border-white/20 dark:border-slate-700/50 rounded-2xl shadow-2xl p-4 max-w-xs\">\r\n                            <div className=\"flex items-center gap-3\">\r\n                              <div className=\"w-10 h-10 bg-gradient-to-br from-green-500 to-emerald-600 rounded-xl flex items-center justify-center\">\r\n                                <div className=\"w-2 h-2 bg-white rounded-full animate-pulse\"></div>\r\n                              </div>\r\n                              <div>\r\n                                <p className=\"font-semibold text-slate-800 dark:text-slate-200\">Coming Soon</p>\r\n                                <p className=\"text-sm text-slate-600 dark:text-slate-400\">{toastMessage}</p>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </motion.div>\r\n                      )}\r\n                    </AnimatePresence>\r\n                    <button\r\n                      onClick={handleExportReportClick}\r\n                      // onClick={handleExploreBranches}\r\n                      disabled={isBranchingLoading}\r\n                      className={`group relative flex items-center justify-center gap-1 sm:gap-2 px-3 py-2 sm:px-4 sm:py-2 lg:px-5 lg:py-2.5 bg-gradient-to-r from-purple-500 to-indigo-500 hover:from-purple-600 hover:to-indigo-600 disabled:from-purple-300 disabled:to-indigo-300 text-white rounded-lg sm:rounded-xl font-medium text-xs sm:text-sm lg:text-base transition-all duration-200 shadow-lg hover:shadow-xl transform hover:scale-105 disabled:cursor-not-allowed disabled:transform-none flex-1 sm:flex-none\r\n      ${toastMessage ? \"branch-overlay-active\" : \"\"}\r\n    `}\r\n    style={{ position: \"relative\", overflow: \"hidden\" }}\r\n  >\r\n    <FiGitBranch className=\"text-sm sm:text-lg flex-shrink-0\" />\r\n    <span className=\"whitespace-nowrap truncate\">\r\n      {isBranchingLoading ? 'Loading...' : 'Branch'}\r\n    </span>\r\n    {!isBranchingLoading && (\r\n      <div className=\"absolute inset-0 rounded-lg sm:rounded-xl bg-gradient-to-r from-purple-400/20 to-indigo-400/20 opacity-0 group-hover:opacity-100 transition-opacity animate-pulse\" />\r\n    )}\r\n    {/* Overlay and padlock when toastMessage is active */}\r\n    {toastMessage && (\r\n      <>\r\n        <span\r\n          className=\"absolute inset-0 rounded-lg sm:rounded-xl bg-gray-900/60 dark:bg-gray-800/70 pointer-events-none flex items-center justify-center\"\r\n          style={{ zIndex: 2 }}\r\n        >\r\n          <FiLock className=\"text-2xl text-white opacity-90 drop-shadow-lg\" />\r\n        </span>\r\n      </>\r\n    )}\r\n  </button>\r\n</div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n\r\n      {/* UPDATED: Mobile-Responsive Branching Modal */}\r\n      {showBranchingModal && (\r\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50 backdrop-blur-sm p-2 sm:p-4\">\r\n          <div className={`relative bg-white dark:bg-gray-900 rounded-2xl shadow-2xl w-full max-h-[95vh] overflow-hidden transition-all duration-300 ${\r\n            modalState.isMobile \r\n              ? 'max-w-full mx-2' \r\n              : 'max-w-6xl mx-4'\r\n          }`}>\r\n            {/* Header with close button */}\r\n            <div className=\"sticky top-0 z-10 bg-white dark:bg-gray-900 border-b border-gray-200 dark:border-gray-700 p-4 sm:p-6\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <div className=\"flex items-center gap-2 sm:gap-3 min-w-0 flex-1\">\r\n                  <div className=\"w-6 h-6 sm:w-8 sm:h-8 bg-gradient-to-r from-purple-500 to-indigo-500 rounded-lg flex items-center justify-center flex-shrink-0\">\r\n                    <FiGitBranch className=\"text-white text-sm sm:text-base\" />\r\n                  </div>\r\n                  <div className=\"min-w-0 flex-1\">\r\n                    <h3 className=\"text-lg sm:text-2xl font-bold text-gray-800 dark:text-white truncate\">\r\n                      Branching Simulation\r\n                    </h3>\r\n                    <p className=\"text-xs sm:text-sm text-gray-600 dark:text-gray-400 hidden sm:block\">\r\n                      Explore different decision paths and outcomes\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <button\r\n                  onClick={() => setShowBranchingModal(false)}\r\n                  className=\"p-2 text-gray-500 hover:text-red-500 hover:bg-gray-100 dark:hover:bg-gray-800 rounded-lg transition-colors flex-shrink-0\"\r\n                  aria-label=\"Close modal\"\r\n                >\r\n                  <FiX size={modalState.isMobile ? 20 : 24} />\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Scrollable content area */}\r\n            <div className=\"overflow-y-auto\" style={{ maxHeight: 'calc(95vh - 120px)' }}>\r\n              <div className=\"p-4 sm:p-6\">\r\n                {branchingData ? (\r\n                  <div className={`${modalState.isMobile ? 'min-h-[400px]' : 'h-[500px]'}`}>\r\n                    <BranchingVisualization treeData={branchingData} />\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"flex items-center justify-center h-64\">\r\n                    <div className=\"text-center\">\r\n                      <div className=\"w-16 h-16 bg-gray-100 dark:bg-gray-800 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n                        <FiGitBranch className=\"text-2xl text-gray-400\" />\r\n                      </div>\r\n                      <p className=\"text-gray-600 dark:text-gray-300\">No branching data available.</p>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* UPDATED: Mobile-Responsive Explanation Modal */}\r\n      {explanationModal.isOpen && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 backdrop-blur-sm flex items-center justify-center z-50 p-2 sm:p-4\">\r\n          <div className={`bg-white dark:bg-slate-800 rounded-2xl shadow-2xl w-full max-h-[95vh] overflow-hidden relative transition-all duration-300 ${\r\n            modalState.isMobile \r\n              ? `${modalState.showFullscreenMode ? 'max-w-full h-full' : 'max-w-full'} mx-2` \r\n              : 'max-w-4xl mx-4'\r\n          }`}>\r\n            \r\n            {/* Mobile Navigation Bar - Only show on mobile */}\r\n            {modalState.isMobile && (\r\n              <div className=\"sticky top-0 z-20 bg-slate-100 dark:bg-slate-700 border-b border-slate-200 dark:border-slate-600 px-4 py-2\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  {/* Section Navigation */}\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <button\r\n                      onClick={() => navigateModalSection('prev')}\r\n                      className=\"p-1.5 bg-blue-500 hover:bg-blue-600 text-white rounded-full transition-colors\"\r\n                      aria-label=\"Previous section\"\r\n                    >\r\n                      <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\r\n                      </svg>\r\n                    </button\r\n                    >\r\n                    \r\n                    <div className=\"text-xs font-medium text-slate-700 dark:text-slate-300 px-2 py-1 bg-white dark:bg-slate-800 rounded-full border\">\r\n                      {modalState.currentSection === 'controls' && '🔊 Voice'}\r\n                      {modalState.currentSection === 'content' && '💡 Content'}\r\n                      {modalState.currentSection === 'export' && '🏷️ Export'}\r\n                    </div>\r\n                    \r\n                    <button\r\n                      onClick={() => navigateModalSection('next')}\r\n                      className=\"p-1.5 bg-blue-500 hover:bg-blue-600 text-white rounded-full transition-colors\"\r\n                      aria-label=\"Next section\"\r\n                    >\r\n                      <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\r\n                      </svg>\r\n                    </button>\r\n                  </div>\r\n                  \r\n                  {/* Mobile Controls */}\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <button\r\n                      onClick={toggleFullscreen}\r\n                      className=\"p-1.5 text-slate-600 dark:text-slate-400 hover:bg-slate-200 dark:hover:bg-slate-600 rounded-lg transition-colors\"\r\n                      aria-label=\"Toggle fullscreen\"\r\n                    >\r\n                      {modalState.showFullscreenMode ? (\r\n                        <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 9l6 6m0-6l-6 6M21 3v18H3V3h18z\" />\r\n                        </svg>\r\n                      ) : (\r\n                        <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 8V4m0 0h4M4 4l5 5m11-5v4m0-4h-4m4 0l-5 5M4 16v4m0 0h4m-4 0l5-5m11 5l-5-5m5 5v-4m0 4h-4\" />\r\n                        </svg>\r\n                      )}\r\n                    </button>\r\n                    \r\n                    <button\r\n                      onClick={closeModal}\r\n                      className=\"p-1.5 text-red-500 hover:bg-red-50 dark:hover:bg-red-900/20 rounded-lg transition-colors\"\r\n                      aria-label=\"Close modal\"\r\n                    >\r\n                      <FiX size={16} />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Desktop Header */}\r\n            {!modalState.isMobile && (\r\n              <div className=\"flex items-center justify-between p-6 border-b border-slate-200 dark:border-slate-700\">\r\n                <div className=\"flex items-center gap-3\">\r\n                  <div className=\"w-8 h-8 bg-gradient-to-r from-blue-500 to-purple-500 rounded-lg flex items-center justify-center\">\r\n                    <FiHelpCircle className=\"text-white text-lg\" />\r\n                  </div>\r\n                  <h3 className=\"text-xl font-bold text-slate-900 dark:text-white\">\r\n                    Detailed Explanation\r\n                  </h3>\r\n                </div>\r\n                <button\r\n                  onClick={closeModal}\r\n                  className=\"p-2 hover:bg-slate-100 dark:hover:bg-slate-700 rounded-lg transition-colors\"\r\n                  aria-label=\"Close modal\"\r\n                >\r\n                  <FiX className=\"text-xl text-slate-500 dark:text-slate-400\" />\r\n                </button>\r\n              </div>\r\n            )}\r\n\r\n            {/* Scrollable Content Container */}\r\n            <div className={`overflow-y-auto ${\r\n              modalState.isMobile \r\n                ? modalState.showFullscreenMode \r\n                  ? 'h-full' \r\n                  : 'max-h-[calc(95vh-120px)]'\r\n                : 'max-h-[calc(90vh-120px)]'\r\n            }`}>\r\n              \r\n              {/* Voice Controls Section - Always show on desktop, conditional on mobile */}\r\n              <div className={`${\r\n                modalState.isMobile && modalState.currentSection !== 'controls' ? 'hidden' : 'block'\r\n              } ${!explanationModal.loading && !explanationModal.error && explanationModal.content ? 'block' : 'hidden'}`}>\r\n                <div className=\"px-4 sm:px-6 py-3 sm:py-4 border-b border-slate-200 dark:border-slate-700 bg-slate-50 dark:bg-slate-700/50\">\r\n                  <div className=\"space-y-4\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <h4 className=\"text-sm sm:text-base font-semibold text-slate-700 dark:text-slate-300 flex items-center gap-2\">\r\n                        <span className=\"w-2 h-2 bg-blue-500 rounded-full\"></span>\r\n                        Voice Controls\r\n                      </h4>\r\n                      <div className=\"flex items-center gap-2 text-xs text-slate-500\">\r\n                        <span className={`w-2 h-2 rounded-full ${speechState.isSpeaking ? 'bg-green-500 animate-pulse' : 'bg-gray-400'}`}></span>\r\n                        {speechState.isSpeaking ? 'Speaking...' : 'Ready'}\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"grid grid-cols-1 gap-4\">\r\n                      <div className=\"space-y-2\">\r\n                        <label className=\"text-sm font-medium text-slate-700 dark:text-slate-300\">Voice:</label>\r\n                        <select\r\n                          value={speechState.selectedVoice?.name || ''}\r\n                          onChange={(e) => {\r\n                            const voice = speechState.availableVoices.find(v => v.name === e.target.value);\r\n                            setSpeechState(prev => ({ ...prev, selectedVoice: voice }));\r\n                          }}\r\n                          className=\"w-full text-sm px-3 py-2 border border-slate-300 dark:border-slate-600 rounded-lg bg-white dark:bg-slate-800 text-slate-700 dark:text-slate-300\"\r\n                        >\r\n                          {speechState.availableVoices.map((voice) => (\r\n                            <option key={voice.name} value={voice.name}>\r\n                              {voice.name.split(' ')[0]} ({voice.gender || 'Unknown'})\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </div>\r\n                      \r\n                      <div className=\"space-y-2\">\r\n                        <label className=\"text-sm font-medium text-slate-700 dark:text-slate-300\">Speed:</label>\r\n                        <select\r\n                          value={speechState.speechRate}\r\n                          onChange={(e) => setSpeechState(prev => ({ ...prev, speechRate: parseFloat(e.target.value) }))}\r\n                          className=\"w-full text-sm px-3 py-2 border border-slate-300 dark:border-slate-600 rounded-lg bg-white dark:bg-slate-800 text-slate-700 dark:text-slate-300\"\r\n                        >\r\n                          <option value={0.5}>🐢 Slow</option>\r\n                          <option value={1}>🚶 Normal</option>\r\n                          <option value={1.5}>🏃 Fast</option>\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"flex flex-col sm:flex-row justify-center gap-2 sm:gap-3\">\r\n                      <button\r\n                        onClick={() => speakNarrative(explanationModal.content)}\r\n                        disabled={speechState.isSpeaking}\r\n                        className=\"flex items-center justify-center gap-2 px-4 py-2.5 bg-indigo-500 hover:bg-indigo-600 disabled:bg-indigo-300 text-white rounded-lg font-medium transition-colors shadow-md hover:shadow-lg text-sm sm:text-base\"\r\n                      >\r\n                        <span className=\"text-lg\">🔊</span>\r\n                        {speechState.isSpeaking ? 'Speaking...' : 'Listen'}\r\n                      </button>\r\n                      \r\n                      {speechState.isSpeaking && (\r\n                        <button\r\n                          onClick={stopNarration}\r\n                          className=\"flex items-center justify-center gap-2 px-4 py-2.5 bg-red-500 hover:bg-red-600 text-white rounded-lg font-medium transition-colors shadow-md hover:shadow-lg text-sm sm:text-base\"\r\n                        >\r\n                          <span className=\"text-lg\">⏹</span>\r\n                          Stop\r\n                        </button>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Content Section - Always show on desktop, conditional on mobile */}\r\n              <div className={`${\r\n                modalState.isMobile && modalState.currentSection !== 'content' ? 'hidden' : 'block'\r\n              }`}>\r\n                <div className=\"p-4 sm:p-6\">\r\n                  {explanationModal.loading ? (\r\n                    <div className=\"flex flex-col items-center justify-center py-12\">\r\n                      <div className=\"relative\">\r\n                        <div className=\"animate-spin rounded-full h-12 sm:h-16 w-12 sm:w-16 border-4 border-blue-200\"></div>\r\n                        <div className=\"animate-spin rounded-full h-12 sm:h-16 w-12 sm:w-16 border-t-4 border-blue-500 absolute top-0 left-0\"></div>\r\n                      </div>\r\n                      <p className=\"text-slate-600 dark:text-slate-400 mt-6 text-base sm:text-lg font-medium\">Thinking...</p>\r\n                      <p className=\"text-slate-500 dark:text-slate-500 text-sm mt-2\">Generating detailed explanation</p>\r\n                    </div>\r\n                  ) : explanationModal.error ? (\r\n                    <div className=\"flex items-start gap-3 p-4 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg\">\r\n                      <span className=\"text-red-500 text-xl flex-shrink-0\">❌</span>\r\n                      <div className=\"min-w-0\">\r\n                        <p className=\"font-medium text-red-800 dark:text-red-200\">Error</p>\r\n                        <p className=\"text-red-600 dark:text-red-400 text-sm break-words\">{explanationModal.error}</p>\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"space-y-4\">\r\n                      {/* Cache indicator */}\r\n                      {narrativeCache[explanationModal.timestamp] && (\r\n                        <div className=\"flex items-center gap-2 text-xs text-slate-500 dark:text-slate-400 mb-4\">\r\n                          <span className=\"w-2 h-2 bg-green-500 rounded-full\"></span>\r\n                          <span>Cached explanation</span>\r\n                        </div>\r\n                      )}\r\n                      \r\n                      {/* Main Narrative Section */}\r\n                      <div className=\"bg-gradient-to-r from-blue-50 to-indigo-50 dark:from-blue-900/20 dark:to-indigo-900/20 border border-blue-200 dark:border-blue-800 rounded-lg p-4 sm:p-6\">\r\n                        <div className=\"flex items-start gap-3 sm:gap-4\">\r\n                          <div className=\"w-6 h-6 sm:w-8 sm:h-8 bg-gradient-to-r from-blue-500 to-indigo-500 rounded-lg flex items-center justify-center flex-shrink-0 mt-1\">\r\n                            <span className=\"text-white text-xs sm:text-sm\">💡</span>\r\n                          </div>\r\n                          <div className=\"flex-1 min-w-0\">\r\n                            <h4 className=\"font-semibold text-blue-900 dark:text-blue-100 mb-3 text-base sm:text-lg\">\r\n                              Detailed Explanation\r\n                            </h4>\r\n                            <div className=\"prose dark:prose-invert prose-blue max-w-none prose-sm sm:prose-base\">\r\n                              <div className=\"text-blue-900 dark:text-blue-100 whitespace-pre-wrap leading-relaxed text-sm sm:text-base break-words\">\r\n                                {formatNarrative(explanationModal.content, speechState.currentSentenceIndex, speechState.sentences)}\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        {/* Divider */}\r\n                        <div className=\"my-6 border-t border-blue-200 dark:border-blue-800\"></div>\r\n                        {/* Next Step Suggestion */}\r\n                        <div className=\"flex items-center gap-2 mt-4\">\r\n                          <span className=\"text-green-500 text-lg\">➡️</span>\r\n                          <span className=\"font-semibold text-green-700 dark:text-green-300\">Next Step:</span>\r\n                          <span className=\"text-green-700 dark:text-green-300\">\r\n                            {getNextStepSuggestion(explanationModal.content)}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              {/* Export Section - Always show on desktop, conditional on mobile */}\r\n              <div className={`${\r\n                modalState.isMobile && modalState.currentSection !== 'export' ? 'hidden' : 'block'\r\n              }`}>\r\n                <div className=\"bg-gradient-to-r from-emerald-50 to-green-50 dark:from-emerald-900/20 dark:to-green-900/20 border-t border-slate-200 dark:border-slate-700 p-4 sm:p-6\">\r\n                  <div className=\"flex items-start gap-3 sm:gap-4\">\r\n                    <div className=\"w-6 h-6 sm:w-8 sm:h-8 bg-gradient-to-r from-emerald-500 to-green-500 rounded-lg flex items-center justify-center flex-shrink-0 mt-1\">\r\n                      <span className=\"text-white text-xs sm:text-sm\">🏷️</span>\r\n                    </div>\r\n                    <div className=\"flex-1 min-w-0\">\r\n                      <h4 className=\"font-semibold text-emerald-900 dark:text-emerald-100 mb-3 text-base sm:text-lg\">\r\n                        Save & Export\r\n                      </h4>\r\n                      \r\n                      {/* Suggested Tags */}\r\n                      {exportState.suggestedTags.length > 0 && (\r\n                        <div className=\"mb-4\">\r\n                          <p className=\"text-sm font-medium text-emerald-800 dark:text-emerald-200 mb-2\">Suggested Tags:</p>\r\n                          <div className=\"flex flex-wrap gap-2\">\r\n                            {exportState.suggestedTags.map((tag, index) => (\r\n                              <span\r\n                                key={index}\r\n                                className=\"px-2 sm:px-3 py-1 bg-emerald-100 dark:bg-emerald-800 text-emerald-800 dark:text-emerald-100 rounded-full text-xs sm:text-sm font-medium cursor-pointer hover:bg-emerald-200 dark:hover:bg-emerald-700 transition-colors break-words\"\r\n                                onClick={() => {\r\n                                  const currentTags = exportState.customTags.split(',').map(t => t.trim()).filter(t => t);\r\n                                  if (!currentTags.includes(tag)) {\r\n                                    setExportState(prev => ({\r\n                                      ...prev,\r\n                                      customTags: currentTags.length > 0 ? `${exportState.customTags}, ${tag}` : tag\r\n                                    }));\r\n                                  }\r\n                                }}\r\n                              >\r\n                                {tag}\r\n                              </span>\r\n                            ))}\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                      \r\n                      {/* Custom Tags Input */}\r\n                      <div className=\"mb-4\">\r\n                        <button\r\n                          onClick={() => setExportState(prev => ({ ...prev, showTagInput: !prev.showTagInput }))}\r\n                          className=\"text-sm text-emerald-700 dark:text-emerald-300 hover:text-emerald-900 dark:hover:text-emerald-100 font-medium mb-2\"\r\n                        >\r\n                          {exportState.showTagInput ? '− Hide' : '+ Add'} Custom Tags\r\n                        </button>\r\n                        {exportState.showTagInput && (\r\n                          <input\r\n                            type=\"text\"\r\n                            placeholder=\"Add custom tags (comma-separated): #urgent, #follow-up\"\r\n                            value={exportState.customTags}\r\n                            onChange={(e) => setExportState(prev => ({ ...prev, customTags: e.target.value }))}\r\n                            className=\"w-full px-3 py-2 border border-emerald-300 dark:border-emerald-600 rounded-lg bg-white dark:bg-slate-800 text-emerald-900 dark:text-emerald-100 text-sm\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                      \r\n                      {/* Export Buttons */}\r\n                      <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3\">\r\n                        <button\r\n                          onClick={() => {\r\n                            const tags = exportState.customTags.split(',').map(t => t.trim()).filter(t => t);\r\n                            const result = rawResults[explanationModal.timestamp];\r\n                            exportAsMarkdown(explanationModal.content, tags, result);\r\n                          }}\r\n                          className=\"flex items-center justify-center gap-2 px-4 py-2.5 bg-slate-600 hover:bg-slate-700 text-white rounded-lg font-medium transition-colors shadow-md hover:shadow-lg text-sm\"\r\n                        >\r\n                          📄 Export Markdown\r\n                        </button>\r\n                        <button\r\n                          onClick={() => {\r\n                            const tags = exportState.customTags.split(',').map(t => t.trim()).filter(t => t);\r\n                            const result = rawResults[explanationModal.timestamp];\r\n                            exportAsPDF(explanationModal.content, tags, result);\r\n                          }}\r\n                          className=\"flex items-center justify-center gap-2 px-4 py-2.5 bg-red-600 hover:bg-red-700 text-white rounded-lg font-medium transition-colors shadow-md hover:shadow-lg text-sm\"\r\n                        >\r\n                          📋 Export PDF\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Desktop Footer - Only show on desktop */}\r\n              {!modalState.isMobile && (\r\n                <div className=\"sticky bottom-0 bg-white dark:bg-slate-800 border-t border-slate-200 dark:border-slate-700 p-6\">\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <div className=\"text-xs text-slate-500 dark:text-slate-400\">\r\n                      {narrativeCache[explanationModal.timestamp] ? (\r\n                        <span className=\"flex items-center gap-1\">\r\n                          <span className=\"w-1.5 h-1.5 bg-green-500 rounded-full\"></span>\r\n                          Retrieved from cache\r\n                        </span>\r\n                      ) : (\r\n                        <span>Generated fresh explanation</span>\r\n                      )}\r\n                    </div>\r\n                    \r\n                    <div className=\"flex items-center gap-3\">\r\n                      {!explanationModal.loading && !explanationModal.error && explanationModal.content && (\r\n                        <>\r\n                          <button\r\n                            onClick={() => speakNarrative(explanationModal.content)}\r\n                            disabled={speechState.isSpeaking}\r\n                            className=\"px-4 py-2 bg-indigo-500 hover:bg-indigo-600 disabled:bg-indigo-300 text-white rounded-lg font-medium transition-colors shadow-md hover:shadow-lg flex items-center gap-2\"\r\n                          >\r\n                            🔊 Listen\r\n                          </button>\r\n                          \r\n                          {speechState.isSpeaking && (\r\n                            <button\r\n                              onClick={stopNarration}\r\n                              className=\"px-4 py-2 bg-red-500 hover:bg-red-600 text-white rounded-lg font-medium transition-colors shadow-md hover:shadow-lg flex items-center gap-2\"\r\n                            >\r\n                              ⏹ Stop\r\n                            </button>\r\n                          )}\r\n                        </>\r\n                      )}\r\n                      \r\n                      <button\r\n                        onClick={closeModal}\r\n                        className=\"px-6 py-2 bg-slate-500 hover:bg-slate-600 text-white rounded-lg font-medium transition-colors shadow-md hover:shadow-lg\"\r\n                      >\r\n                        Close\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n            \r\n            {/* Mobile Footer - Only show on mobile */}\r\n            {modalState.isMobile && (\r\n              <div className=\"sticky bottom-0 bg-white dark:bg-slate-800 border-t border-slate-200 dark:border-slate-700 p-3\">\r\n                <div className=\"flex justify-between items-center gap-2\">\r\n                  <div className=\"text-xs text-slate-500 dark:text-slate-400 flex items-center gap-1\">\r\n                    {narrativeCache[explanationModal.timestamp] ? (\r\n                      <>\r\n                        <span className=\"w-1.5 h-1.5 bg-green-500 rounded-full\"></span>\r\n                        <span className=\"hidden sm:inline\">Cached</span>\r\n                        <span className=\"sm:hidden\">💾</span>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <span className=\"w-1.5 h-1.5 bg-blue-500 rounded-full\"></span>\r\n                        <span className=\"hidden sm:inline\">Fresh</span>\r\n                        <span className=\"sm:hidden\">✨</span>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                  \r\n                  <div className=\"flex items-center gap-2\">\r\n                    {!explanationModal.loading && !explanationModal.error && explanationModal.content && (\r\n                      <>\r\n                        <button\r\n                          onClick={() => speakNarrative(explanationModal.content)}\r\n                          disabled={speechState.isSpeaking}\r\n                          className=\"px-3 py-1.5 bg-indigo-500 hover:bg-indigo-600 disabled:bg-indigo-300 text-white rounded-lg font-medium transition-colors text-xs flex items-center gap-1\"\r\n                        >\r\n                          <span>🔊</span>\r\n                          <span className=\"hidden xs:inline\">{speechState.isSpeaking ? 'Speaking' : 'Listen'}</span>\r\n                        </button>\r\n                        \r\n                        {speechState.isSpeaking && (\r\n                          <button\r\n                            onClick={stopNarration}\r\n                            className=\"px-3 py-1.5 bg-red-500 hover:bg-red-600 text-white rounded-lg font-medium transition-colors text-xs flex items-center gap-1\"\r\n                          >\r\n                            <span>⏹</span>\r\n                            <span className=\"hidden xs:inline\">Stop</span>\r\n                          </button>\r\n                        )}\r\n                      </>\r\n                    )}\r\n                    \r\n                    <button\r\n                      onClick={closeModal}\r\n                      className=\"px-3 py-1.5 bg-slate-500 hover:bg-slate-600 text-white rounded-lg font-medium transition-colors text-xs\"\r\n                    >\r\n                      Close\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n     {/* Modern Toast Notification */}\r\n      <AnimatePresence>\r\n        {toastMessage && (\r\n          <motion.div\r\n            key=\"toast\"\r\n            initial={{ opacity: 0, x: -100, scale: 0.8 }}\r\n            animate={{ opacity: 1, x: 0, scale: 1 }}\r\n            exit={{ opacity: 0, x: -100, scale: 0.8 }}\r\n            transition={{ duration: 0.4, type: \"spring\", stiffness: 300 }}\r\n            className=\"fixed top-6 left-6 z-[1000]\"\r\n          >\r\n            <div className=\"bg-white/90 dark:bg-slate-800/90 backdrop-blur-xl border border-white/20 dark:border-slate-700/50 rounded-2xl shadow-2xl p-4 max-w-sm\">\r\n              <div className=\"flex items-center gap-3\">\r\n                <div className=\"w-10 h-10 bg-gradient-to-br from-green-500 to-emerald-600 rounded-xl flex items-center justify-center\">\r\n                  <div className=\"w-2 h-2 bg-white rounded-full animate-pulse\"></div>\r\n                </div>\r\n                <div>\r\n                  <p className=\"font-semibold text-slate-800 dark:text-slate-200\">Coming Soon</p>\r\n                  <p className=\"text-sm text-slate-600 dark:text-slate-400\">{toastMessage}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n    </>\r\n  );\r\n};\r\n\r\n// Helper function to format narrative content with sentence highlighting\r\nfunction formatNarrative(content, currentSentenceIndex = -1, sentences = []) {\r\n  if (!content) return '';\r\n  \r\n  // If we have sentences for highlighting, use them\r\n  if (sentences.length > 0 && currentSentenceIndex >= 0) {\r\n    return (\r\n      <div className=\"space-y-2\">\r\n        {sentences.map((sentence, index) => (\r\n          <span\r\n            key={index}\r\n            className={`inline-block transition-all duration-300 ${\r\n              index === currentSentenceIndex\r\n                ? 'bg-yellow-200 dark:bg-yellow-800 px-1 py-0.5 rounded shadow-lg transform scale-105'\r\n                : 'hover:bg-blue-50 dark:hover:bg-blue-900/20 px-1 py-0.5 rounded'\r\n            }`}\r\n          >\r\n            {sentence}{index < sentences.length - 1 ? ' ' : ''}\r\n          </span>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  // Default formatting without highlighting\r\n  return content\r\n    .split('\\n\\n')\r\n    .map((paragraph, index) => (\r\n      <div key={index} className=\"mb-4 last:mb-0\">\r\n        {paragraph.split('\\n').map((line, lineIndex) => {\r\n          // Handle bullet points\r\n          if (line.trim().startsWith('- ') || line.trim().startsWith('* ')) {\r\n            return (\r\n              <div key={lineIndex} className=\"flex items-start gap-2 mb-1\">\r\n                <span className=\"w-1.5 h-1.5 bg-blue-500 rounded-full mt-2 flex-shrink-0\"></span>\r\n                <span className=\"break-words\">{line.trim().substring(2)}</span>\r\n              </div>\r\n            );\r\n          }\r\n          \r\n          // Handle numbered lists\r\n          const numberedMatch = line.trim().match(/^(\\d+)\\.\\s(.+)$/);\r\n          if (numberedMatch) {\r\n            return (\r\n              <div key={lineIndex} className=\"flex items-start gap-2 mb-1\">\r\n                <span className=\"w-5 h-5 bg-blue-500 text-white text-xs rounded-full flex items-center justify-center flex-shrink-0 mt-0.5\">\r\n                  {numberedMatch[1]}\r\n                </span>\r\n                <span className=\"break-words\">{numberedMatch[2]}</span>\r\n              </div>\r\n            );\r\n          }\r\n          \r\n          // Handle bold text (simple **text** format)\r\n          let formattedLine = line.replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>');\r\n          \r\n          return (\r\n            <div key={lineIndex} className=\"mb-1 break-words\" dangerouslySetInnerHTML={{ __html: formattedLine }} />\r\n          );\r\n        })}\r\n      </div>\r\n    ));\r\n}\r\n\r\nfunction formatResponse(response) {\r\n  if (!response || typeof response !== \"object\") {\r\n    return (\r\n      <div className=\"flex items-center gap-2 p-3 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg\">\r\n        <span className=\"text-red-500\">❌</span>\r\n        <p className=\"text-red-600 dark:text-red-400 font-medium\">Invalid response received.</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n  // === Fallback to legacy format ===\r\n  return (\r\n    <div className=\"p-4 bg-slate-50 dark:bg-slate-800/50 border border-slate-200 dark:border-slate-700 rounded-lg\">\r\n      <div className=\"flex items-center gap-2 mb-2\">\r\n        <span className=\"text-slate-400\">📭</span>\r\n        <p className=\"text-slate-500 dark:text-slate-400 text-sm\">Unstructured or legacy response.</p>\r\n      </div>\r\n      <pre className=\"text-xs text-slate-600 dark:text-slate-400 whitespace-pre-wrap bg-slate-100 dark:bg-slate-900 p-3 rounded-lg overflow-x-auto\">\r\n        {JSON.stringify(response, null, 2)}\r\n      </pre>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction getNextStepSuggestion(content) {\r\n  // Simple rule-based suggestion\r\n  if (!content) return \"Review the above explanation and consider running a branching simulation.\";\r\n  const lc = content.toLowerCase();\r\n  if (lc.includes(\"risk\")) return \"Consider running a risk analysis branch.\";\r\n  if (lc.includes(\"recommend\")) return \"Apply the recommendations or simulate alternative scenarios.\";\r\n  if (lc.includes(\"anomaly\")) return \"Investigate anomalies further or consult with your team.\";\r\n  if (lc.includes(\"predict\")) return \"Use the prediction to inform your next business decision.\";\r\n  if (lc.includes(\"cost\")) return \"Review cost-saving measures and optimize your strategy.\";\r\n  return \"Review the above explanation and consider running a branching simulation.\";\r\n}\r\n\r\nexport default ScenarioSimulationCard;","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { saveUserInteraction } from \"../services/userBehaviourService\";\r\nimport { useMemory } from \"../MemoryContext\";\r\nimport { db } from \"../firebase\";\r\nimport { Trash2, Plus, Target, Tag } from \"lucide-react\";\r\nimport { generateOmnisContent } from \"../services/omnis-actions\";\r\nimport {\r\n  writeBatch,\r\n  doc,\r\n  collection,\r\n  addDoc,\r\n  query,\r\n  orderBy,\r\n  getDocs,\r\n  setDoc,\r\n  getDoc,\r\n  serverTimestamp,\r\n  where,\r\n} from \"firebase/firestore\";\r\nimport { Timestamp } from \"firebase/firestore\";\r\n\r\nimport { useAuth } from \"../AuthContext\";\r\nimport { ChevronRight, ChevronUp, Lock, Crown, Copy, Undo, Redo, Type, Sparkles, Edit3, Zap } from \"lucide-react\";\r\nimport ScenarioSimulationCard from \"./SimulationResult\";\r\nimport ShimmerLoader from \"./ShimmerLoader\";\r\n\r\nconst BACKEND_URL = process.env.NODE_ENV === \"development\"\r\n  ? \"http://localhost:8000/run\"\r\n  : \"https://your-production-backend.com/run\";\r\n\r\n// Simplified InputForm component without markdown\r\nconst SimplifiedInputForm = ({ scenario, onScenarioChange, onCategoryChange, placeholder = \"Type your scenario here...\" }) => {\r\n  const [history, setHistory] = useState([scenario?.text || \"\"]);\r\n  const [historyIndex, setHistoryIndex] = useState(0);\r\n  const [showCopySuccess, setShowCopySuccess] = useState(false);\r\n  const textareaRef = useRef(null);\r\n\r\n  // Initialize history when value changes from parent\r\n  useEffect(() => {\r\n    if (scenario?.text !== history[historyIndex]) {\r\n      setHistory([scenario?.text || \"\"]);\r\n      setHistoryIndex(0);\r\n    }\r\n  }, []);\r\n\r\n  // Update input and version history\r\n  const handleInputChange = (e) => {\r\n    const newValue = e.target.value;\r\n    \r\n    // Update parent component\r\n    onScenarioChange({ ...scenario, text: newValue });\r\n    \r\n    // Update history for undo/redo\r\n    const newHistory = history.slice(0, historyIndex + 1);\r\n    newHistory.push(newValue);\r\n    setHistory(newHistory);\r\n    setHistoryIndex(newHistory.length - 1);\r\n  };\r\n\r\n  // Handle category change\r\n  const handleCategoryChange = (e) => {\r\n    const newCategory = e.target.value;\r\n    onCategoryChange({ ...scenario, category: newCategory });\r\n  };\r\n\r\n  // Copy input text to clipboard\r\n  const handleCopy = async () => {\r\n    try {\r\n      await navigator.clipboard.writeText(scenario?.text || \"\");\r\n      setShowCopySuccess(true);\r\n      setTimeout(() => setShowCopySuccess(false), 2000);\r\n    } catch (err) {\r\n      console.error(\"Failed to copy:\", err);\r\n      // Fallback for older browsers\r\n      if (textareaRef.current) {\r\n        textareaRef.current.select();\r\n        document.execCommand('copy');\r\n        setShowCopySuccess(true);\r\n        setTimeout(() => setShowCopySuccess(false), 2000);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Undo functionality\r\n  const handleUndo = () => {\r\n    if (historyIndex > 0) {\r\n      const previousValue = history[historyIndex - 1];\r\n      onScenarioChange({ ...scenario, text: previousValue });\r\n      setHistoryIndex(historyIndex - 1);\r\n    }\r\n  };\r\n\r\n  // Redo functionality\r\n  const handleRedo = () => {\r\n    if (historyIndex < history.length - 1) {\r\n      const nextValue = history[historyIndex + 1];\r\n      onScenarioChange({ ...scenario, text: nextValue });\r\n      setHistoryIndex(historyIndex + 1);\r\n    }\r\n  };\r\n\r\n  // Calculate word and character counts\r\n  const wordCount = scenario?.text ? scenario.text.trim().split(/\\s+/).filter(Boolean).length : 0;\r\n  const charCount = scenario?.text ? scenario.text.length : 0;\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Modern Toolbar */}\r\n      <div className=\"flex flex-wrap gap-3 items-center justify-between bg-gradient-to-r from-slate-50 to-blue-50 dark:from-slate-800 dark:to-blue-900/30 p-4 rounded-xl border border-slate-200 dark:border-slate-700 backdrop-blur-sm\">\r\n        <div className=\"flex gap-2 flex-wrap\">\r\n          <button\r\n            onClick={handleUndo}\r\n            disabled={historyIndex === 0}\r\n            className=\"group flex items-center gap-2 px-4 py-2 text-sm bg-white dark:bg-slate-800 border border-slate-300 dark:border-slate-600 rounded-lg hover:bg-slate-50 dark:hover:bg-slate-700 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 shadow-sm hover:shadow-md\"\r\n            title=\"Undo (Ctrl+Z)\"\r\n          >\r\n            <Undo className=\"w-4 h-4 transition-transform group-hover:scale-110\" />\r\n            <span>Undo</span>\r\n          </button>\r\n          \r\n          <button\r\n            onClick={handleRedo}\r\n            disabled={historyIndex === history.length - 1}\r\n            className=\"group flex items-center gap-2 px-4 py-2 text-sm bg-white dark:bg-slate-800 border border-slate-300 dark:border-slate-600 rounded-lg hover:bg-slate-50 dark:hover:bg-slate-700 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 shadow-sm hover:shadow-md\"\r\n            title=\"Redo (Ctrl+Y)\"\r\n          >\r\n            <Redo className=\"w-4 h-4 transition-transform group-hover:scale-110\" />\r\n            <span>Redo</span>\r\n          </button>\r\n          \r\n          <button\r\n            onClick={handleCopy}\r\n            className={`group flex items-center gap-2 px-4 py-2 text-sm rounded-lg transition-all duration-200 shadow-sm hover:shadow-md ${\r\n              showCopySuccess \r\n                ? 'bg-emerald-500 text-white shadow-emerald-500/25' \r\n                : 'bg-gradient-to-r from-blue-500 to-indigo-600 text-white hover:from-blue-600 hover:to-indigo-700'\r\n            }`}\r\n            title=\"Copy to clipboard\"\r\n          >\r\n            <Copy className=\"w-4 h-4 transition-transform group-hover:scale-110\" />\r\n            <span>{showCopySuccess ? 'Copied!' : 'Copy'}</span>\r\n          </button>\r\n        </div>\r\n        \r\n        <div className=\"flex items-center gap-6 text-sm text-slate-600 dark:text-slate-400\">\r\n          <div className=\"flex items-center gap-2 bg-white dark:bg-slate-800 px-3 py-1.5 rounded-lg border border-slate-200 dark:border-slate-700\">\r\n            <Type className=\"w-4 h-4 text-blue-500\" />\r\n            <span className=\"font-medium\">{wordCount}</span>\r\n            <span className=\"text-slate-400\">words</span>\r\n          </div>\r\n          <div className=\"flex items-center gap-2 bg-white dark:bg-slate-800 px-3 py-1.5 rounded-lg border border-slate-200 dark:border-slate-700\">\r\n            <span className=\"font-medium\">{charCount}</span>\r\n            <span className=\"text-slate-400\">chars</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Category and Input Form */}\r\n      <div className=\"space-y-4\">\r\n        {/* Category Input */}\r\n        <div className=\"flex flex-col space-y-2\">\r\n          <div className=\"flex items-center gap-3 mb-2\">\r\n            <div className=\"flex items-center gap-2 px-3 py-1.5 bg-gradient-to-r from-purple-500 to-pink-600 text-white rounded-lg text-sm font-medium\">\r\n              <Tag className=\"w-4 h-4\" />\r\n              <span>Category</span>\r\n            </div>\r\n            <div className=\"flex-1 h-px bg-gradient-to-r from-slate-300 to-transparent dark:from-slate-600\"></div>\r\n          </div>\r\n          \r\n          <div className=\"relative group\">\r\n            <input\r\n              type=\"text\"\r\n              value={scenario?.category || \"\"}\r\n              onChange={handleCategoryChange}\r\n              className=\"w-full p-4 border-2 border-slate-300 dark:border-slate-600 rounded-xl bg-white dark:bg-slate-900 dark:text-white text-sm resize-none focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-purple-500 transition-all duration-200 group-hover:border-slate-400 dark:group-hover:border-slate-500 shadow-lg\"\r\n              placeholder=\"e.g., Business Strategy, Risk Assessment, Market Analysis...\"\r\n            />\r\n            <div className=\"absolute inset-0 rounded-xl bg-gradient-to-r from-purple-500/5 to-pink-500/5 pointer-events-none opacity-0 group-hover:opacity-100 transition-opacity duration-200\"></div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Scenario Input */}\r\n        <div className=\"flex flex-col space-y-2\">\r\n          <div className=\"flex items-center gap-3 mb-2\">\r\n            <div className=\"flex items-center gap-2 px-3 py-1.5 bg-gradient-to-r from-blue-500 to-indigo-600 text-white rounded-lg text-sm font-medium\">\r\n              <Edit3 className=\"w-4 h-4\" />\r\n              <span>Scenario</span>\r\n            </div>\r\n            <div className=\"flex-1 h-px bg-gradient-to-r from-slate-300 to-transparent dark:from-slate-600\"></div>\r\n          </div>\r\n          \r\n          <div className=\"relative group\">\r\n            <textarea\r\n              ref={textareaRef}\r\n              value={scenario?.text || \"\"}\r\n              onChange={handleInputChange}\r\n              className=\"w-full p-6 border-2 border-slate-300 dark:border-slate-600 rounded-xl bg-white dark:bg-slate-900 dark:text-white text-sm resize-none focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 min-h-[200px] group-hover:border-slate-400 dark:group-hover:border-slate-500 shadow-lg\"\r\n              placeholder={placeholder}\r\n              spellCheck=\"false\"\r\n            />\r\n            <div className=\"absolute inset-0 rounded-xl bg-gradient-to-r from-blue-500/5 to-indigo-500/5 pointer-events-none opacity-0 group-hover:opacity-100 transition-opacity duration-200\"></div>\r\n          </div>\r\n          \r\n          <div className=\"flex items-center gap-2 text-sm text-slate-500 dark:text-slate-400 bg-slate-50 dark:bg-slate-800 p-3 rounded-lg\">\r\n            <Sparkles className=\"w-4 h-4 text-blue-500\" />\r\n            <span>Describe your scenario in detail for better analysis results.</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Main ScenarioInput component with updated structure\r\nexport default function ScenarioInput({ onSimulate }) {\r\n  const [scenarios, setScenarios] = useState([{ text: \"\", category: \"\" }]);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [results, setResults] = useState([]);\r\n  const { memory, saveToFirestore } = useMemory();\r\n  const [error, setError] = useState(null);\r\n  const [chatHistory, setChatHistory] = useState([]);\r\n  const [userInteractions, setUserInteractions] = useState([]);\r\n  const [trialExpired, setTrialExpired] = useState(false);\r\n  const [showUpgradeModal, setShowUpgradeModal] = useState(false);\r\n  const { user } = useAuth();\r\n  const [discountDeadline, setDiscountDeadline] = useState(null);\r\n  const [loading, setLoading] = React.useState(true);\r\n  const [simulationLoading, setSimulationLoading] = useState(false);\r\n  const [simulationInput, setSimulationInput] = useState(\"\"); // NEW: For Gemini prompt\r\n  const [generatedResults, setGeneratedResults] = useState([]); // NEW: For Gemini output\r\n  const [isSimulating, setIsSimulating] = useState(false); // NEW: Simulate loading per scenario\r\n  const [isModalOpen, setIsModalOpen] = useState(false); // Add this state if not present\r\n  \r\n  // Get user tier for button logic\r\n  const userTier = (\r\n    user?.subscriptionTier || \r\n    user?.tier?.toLowerCase?.() || \r\n    \"free\"\r\n  ).toLowerCase();\r\n  \r\n  const isFreeTier = userTier === \"free\";\r\n  const isPaidTier = userTier === \"pro\" || userTier === \"enterprise\";\r\n  \r\n  // Timer to switch off loading after 4 seconds (on mount)\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => setLoading(false), 3000);\r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      loadFirestoreMemory();\r\n      checkTrialStatus();\r\n      loadChatHistory();\r\n      loadUserInteractions();\r\n    }\r\n  }, [user]);\r\n\r\n  const loadFirestoreMemory = async () => {\r\n    if (!user) return;\r\n    try {\r\n      const q = query(\r\n        collection(db, \"users\", user.uid, \"memory\"),\r\n        orderBy(\"timestamp\", \"desc\")\r\n      );\r\n      const querySnapshot = await getDocs(q);\r\n      const loadedMemory = querySnapshot.docs.map((doc) => doc.data());\r\n      console.log(\"✅ Firestore Memory Loaded:\", loadedMemory);\r\n    } catch (error) {\r\n      console.error(\"❌ Error loading Firestore memory:\", error);\r\n    }\r\n  };\r\n\r\n  const loadChatHistory = async () => {\r\n    if (!user) return;\r\n    try {\r\n      const q = query(\r\n        collection(db, \"users\", user.uid, \"userInteractions\"),\r\n        orderBy(\"timestamp\", \"desc\")\r\n      );\r\n      const querySnapshot = await getDocs(q);\r\n      const loadedChat = querySnapshot.docs.map((doc) => doc.data());\r\n      setChatHistory(loadedChat);\r\n      console.log(\"✅ Chat history loaded\");\r\n    } catch (error) {\r\n      console.error(\"❌ Error loading chat history:\", error);\r\n    }\r\n  };\r\n\r\n  const loadUserInteractions = async () => {\r\n    if (!user) return;\r\n    try {\r\n      const userInteractionsRef = collection(db, 'userInteractions');\r\n      const q = query(\r\n        userInteractionsRef, \r\n        where('userId', '==', user.uid),\r\n        orderBy('timestamp', 'desc')\r\n      );\r\n      \r\n      const snapshot = await getDocs(q);\r\n      const interactions = snapshot.docs.map(doc => ({\r\n        id: doc.id,\r\n        ...doc.data()\r\n      }));\r\n      \r\n      setUserInteractions(interactions);\r\n      console.log(\"✅ User interactions loaded:\", interactions);\r\n    } catch (error) {\r\n      console.error(\"❌ Error fetching user interactions:\", error);\r\n    }\r\n  };\r\n\r\n  const checkTrialStatus = async () => {\r\n    if (!user) return;\r\n\r\n    try {\r\n      const userRef = doc(db, \"users\", user.uid);\r\n      const userSnap = await getDoc(userRef);\r\n      if (!userSnap.exists()) return;\r\n\r\n      const userData = userSnap.data();\r\n      const tier = (userData.subscriptionTier || user?.tier?.toLowerCase?.() || \"free\").toLowerCase();\r\n      const now = new Date();\r\n\r\n      if (tier !== \"free\") {\r\n        setTrialExpired(false);\r\n        setShowUpgradeModal(false);\r\n        console.log(\"✅ User is on paid tier:\", tier);\r\n        return;\r\n      }\r\n\r\n      const trialStart = userData.trialStartedAt?.toDate?.() || user.trialStartedAt?.toDate?.();\r\n\r\n      if (!trialStart) {\r\n        await setDoc(\r\n          userRef,\r\n          {\r\n            trialStartedAt: serverTimestamp(),\r\n            hasUsedSimulationTrial: true,\r\n          },\r\n          { merge: true }\r\n        );\r\n        setTrialExpired(false);\r\n        setShowUpgradeModal(false);\r\n        console.log(\"🎉 Trial started\");\r\n      } else {\r\n        const trialEnd = new Date(trialStart);\r\n        trialEnd.setDate(trialEnd.getDate() + 7);\r\n\r\n        if (now > trialEnd) {\r\n          setTrialExpired(true);\r\n          setShowUpgradeModal(true);\r\n\r\n          const discountDeadline = userData.discountAvailableUntil?.toDate?.() || user.discountAvailableUntil?.toDate?.();\r\n          if (!discountDeadline || now > discountDeadline) {\r\n            const newDiscountEnd = new Date();\r\n            newDiscountEnd.setDate(now.getDate() + 7);\r\n\r\n            const discountEndTimestamp = Timestamp.fromDate(newDiscountEnd);\r\n            await setDoc(\r\n              userRef,\r\n              {\r\n                discountAvailableUntil: discountEndTimestamp,\r\n              },\r\n              { merge: true }\r\n            );\r\n            setDiscountDeadline(newDiscountEnd);\r\n          } else {\r\n            setDiscountDeadline(discountDeadline);\r\n          }\r\n\r\n          console.log(\"⏰ Trial expired\");\r\n        } else {\r\n          setTrialExpired(false);\r\n          setShowUpgradeModal(false);\r\n          const msLeft = trialEnd - now;\r\n          const daysLeft = Math.floor(msLeft / (1000 * 60 * 60 * 24));\r\n          const hoursLeft = Math.floor((msLeft % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n          const minutesLeft = Math.floor((msLeft % (1000 * 60 * 60)) / (1000 * 60));\r\n          console.log(`✅ Trial still active: ${daysLeft}d ${hoursLeft}h ${minutesLeft}m left`);\r\n        }\r\n      }\r\n\r\n      console.log(\"✅ Trial status checked for user:\", user.uid);\r\n    } catch (err) {\r\n      console.error(\"❌ Error checking trial:\", err);\r\n    }\r\n  };\r\n\r\n  const handleScenarioSubmit = async (query, response, category) => {\r\n    try {\r\n      const historyEntry = {\r\n        query,\r\n        response,\r\n        category, // Include category in the database entry\r\n        timestamp: serverTimestamp(),\r\n      };\r\n      await addDoc(collection(db, \"users\", user.uid, \"userInteractions\"), historyEntry);\r\n      setChatHistory((prev) => [...prev, historyEntry]);\r\n      console.log(\"✅ History saved with category!\");\r\n    } catch (error) {\r\n      console.error(\"❌ Error saving history:\", error);\r\n    }\r\n  };\r\n\r\n  // --- Updated: Handle Run Simulation with Gemini ---\r\n  const handleSimulate = async () => {\r\n    if (!user) {\r\n      setError(\"Please log in to run simulations.\");\r\n      return;\r\n    }\r\n\r\n    if (isFreeTier && trialExpired) {\r\n      setShowUpgradeModal(true);\r\n      return;\r\n    }\r\n\r\n    // Get all non-empty scenarios\r\n    const filteredScenarios = scenarios.filter((s) => s.text.trim() !== \"\");\r\n    if (!filteredScenarios.length) {\r\n      setError(\"Please provide at least one valid scenario.\");\r\n      return;\r\n    }\r\n\r\n    setSimulationLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      // Send all scenarios to Gemini and collect results\r\n      const results = await Promise.all(\r\n        filteredScenarios.map(async (scenario) => {\r\n          if (!scenario.text || scenario.text.trim() === \"\") {\r\n            throw new Error(\"Invalid or missing prompt\");\r\n          }\r\n          console.log('Submitting prompt:', scenario.text);\r\n          let content = \"\";\r\n          await generateOmnisContent(scenario.text, (c) => {\r\n            content = c;\r\n          });\r\n\r\n          return {\r\n            query: scenario.text,\r\n            category: scenario.category,\r\n            response: { result: content, task: \"Generated Content\" },\r\n          };\r\n        })\r\n      );\r\n\r\n      // Store in batches\r\n      await storeResultsInBatches(results, user, db, 5);\r\n\r\n      setGeneratedResults(results);\r\n      setSimulationInput(filteredScenarios.map(s => s.text).join(\"\\n\"));\r\n      setIsModalOpen(true);\r\n    } catch (error) {\r\n      console.error(\"Simulation error:\", error);\r\n      setError(error.message || \"Failed to run simulation. Please try again.\");\r\n    } finally {\r\n      setSimulationLoading(false);\r\n    }\r\n  };\r\n\r\n  // --- Updated: Simulate function (per-scenario) ---\r\n  const handleSimulateScenario = async (scenario, index) => {\r\n    try {\r\n      setIsSimulating(true);\r\n\r\n      if (!scenario.text || scenario.text.trim() === \"\") {\r\n        throw new Error(\"Invalid or missing prompt\");\r\n      }\r\n      console.log('Submitting scenario prompt:', scenario.text);\r\n\r\n      // Call Omnis Gemini action\r\n      const content = await generateOmnisContent(scenario.text);\r\n\r\n      // Store result tied to this scenario\r\n      setGeneratedResults((prev) => [\r\n        ...prev,\r\n        {\r\n          input: scenario.text,\r\n          category: scenario.category,\r\n          output: content,\r\n          index,\r\n        },\r\n      ]);\r\n\r\n      // Save to Firestore\r\n      await handleScenarioSubmit(scenario.text, content, scenario.category);\r\n    } catch (error) {\r\n      console.error(\"Error simulating scenario:\", error);\r\n      setError(error.message || \"Failed to simulate scenario. Please try again.\");\r\n    } finally {\r\n      setIsSimulating(false);\r\n    }\r\n  };\r\n\r\n  // Handle scenario changes (both text and category)\r\n  const handleScenarioChange = (index, updatedScenario) => {\r\n    const updated = [...scenarios];\r\n    updated[index] = updatedScenario;\r\n    setScenarios(updated);\r\n  };\r\n\r\n  const handleAddScenario = () => setScenarios([...scenarios, { text: \"\", category: \"\" }]);\r\n\r\n  const handleRemoveScenario = (index) => {\r\n    if (scenarios.length > 1) {\r\n      setScenarios(scenarios.filter((_, i) => i !== index));\r\n    }\r\n  };\r\n\r\n  // helper to split results into chunks of size N\r\n  function chunkArray(array, size) {\r\n    const chunks = [];\r\n    for (let i = 0; i < array.length; i += size) {\r\n      chunks.push(array.slice(i, i + size));\r\n    }\r\n    return chunks;\r\n  }\r\n\r\n  // batching logic (configurable batch size)\r\n  async function storeResultsInBatches(results, user, db, batchSize = 5) {\r\n    const chunks = chunkArray(results, batchSize);\r\n\r\n    for (const group of chunks) {\r\n      const batch = writeBatch(db);\r\n\r\n      group.forEach((newResult) => {\r\n        const ref = doc(collection(db, \"userInteractions\")); // auto-ID\r\n        batch.set(ref, {\r\n          ...newResult,\r\n          userId: user?.uid,\r\n          timestamp: new Date(),\r\n        });\r\n      });\r\n\r\n      await batch.commit(); // commit one group at a time\r\n    }\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"p-6\">\r\n        <ShimmerLoader height=\"h-32\" width=\"w-full\" rounded=\"rounded-xl\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex flex-col xl:flex-row gap-8 w-full max-w-7xl mx-auto\">\r\n        {/* Left Panel - Scenario Input */}\r\n        <div className=\"flex-1 min-w-0\">\r\n          <div className=\"bg-white dark:bg-gray-800 rounded-2xl border border-gray-200 dark:border-gray-700 shadow-xl overflow-hidden\">\r\n            {/* Header */}\r\n            <div \r\n              className=\"flex justify-between items-center cursor-pointer p-6 bg-gradient-to-r from-gray-50 to-white dark:from-gray-800 dark:to-gray-900 border-b border-gray-200 dark:border-gray-700 hover:bg-gradient-to-r hover:from-blue-50 hover:to-purple-50 dark:hover:from-gray-700 dark:hover:to-gray-800 transition-all duration-300\"\r\n              onClick={() => setIsOpen(!isOpen)}\r\n            >\r\n              <div className=\"flex items-center gap-4\">\r\n                <div className=\"w-10 h-10 bg-gradient-to-r from-emerald-500 to-teal-600 rounded-xl flex items-center justify-center\">\r\n                  <Sparkles className=\"w-5 h-5 text-white\" />\r\n                </div>\r\n                <div>\r\n                  <h2 className=\"text-xl font-bold text-gray-900 dark:text-white\">Scenario Builder</h2>\r\n                  <p className=\"text-sm text-gray-500 dark:text-gray-400\">Create and simulate categorized scenarios</p>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"flex items-center gap-4\">\r\n                <div className=\"flex items-center gap-2\">\r\n                  <div className=\"w-2 h-2 bg-green-500 rounded-full animate-pulse\" />\r\n                  <span className=\"text-xs font-medium text-gray-600 dark:text-gray-400 bg-gray-100 dark:bg-gray-700 px-3 py-1 rounded-full\">\r\n                    Ready\r\n                  </span>\r\n                </div>\r\n                <div className=\"p-2 rounded-lg bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-300\">\r\n                  {isOpen ? <ChevronUp className=\"w-4 h-4\" /> : <ChevronRight className=\"w-4 h-4\" />}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Collapsible Content */}\r\n            <div className={`transition-all duration-500 ease-in-out ${isOpen ? 'max-h-[610px] opacity-100' : 'max-h-0 opacity-0'} overflow-hidden`}>\r\n              <div className=\"p-6 space-y-6\">\r\n                {/* Scenarios List */}\r\n                <div className=\"space-y-4 max-h-[500px] overflow-y-auto scrollbar-thin scrollbar-thumb-gray-300 dark:scrollbar-thumb-gray-600 scrollbar-track-transparent\">\r\n                  {scenarios.map((scenario, index) => (\r\n                    <div key={index} className=\"group relative\">\r\n                      <div className=\"bg-gradient-to-br from-gray-50 to-white dark:from-gray-700 dark:to-gray-800 rounded-xl border border-gray-200 dark:border-gray-600 p-5 hover:shadow-lg transition-all duration-300 hover:border-blue-300 dark:hover:border-blue-600\">\r\n                        {/* Scenario Header */}\r\n                        <div className=\"flex justify-between items-center mb-4\">\r\n                          <div className=\"flex items-center gap-3\">\r\n                            <div className=\"w-8 h-8 bg-gradient-to-r from-blue-500 to-purple-600 text-white rounded-full flex items-center justify-center text-sm font-bold shadow-lg\">\r\n                              {index + 1}\r\n                            </div>\r\n                            <h4 className=\"text-lg font-semibold text-gray-800 dark:text-gray-200\">\r\n                              Scenario {index + 1}\r\n                            </h4>\r\n                            {scenario.category && (\r\n                              <span className=\"px-2 py-1 bg-purple-100 dark:bg-purple-900/30 text-purple-600 dark:text-purple-400 rounded-full text-xs font-medium\">\r\n                                {scenario.category}\r\n                              </span>\r\n                            )}\r\n                          </div>\r\n                          \r\n                          {scenarios.length > 1 && (\r\n                            <button\r\n                              onClick={() => handleRemoveScenario(index)}\r\n                              className=\"opacity-0 group-hover:opacity-100 transition-all duration-200 text-red-500 hover:text-red-700 dark:hover:text-red-400 p-2 rounded-lg hover:bg-red-50 dark:hover:bg-red-900/20\"\r\n                              aria-label={`Remove scenario ${index + 1}`}\r\n                            >\r\n                              <Trash2 className=\"w-4 h-4\" />\r\n                            </button>\r\n                          )}\r\n                        </div>\r\n\r\n                        {/* Input Form */}\r\n                        <SimplifiedInputForm\r\n                          scenario={scenario}\r\n                          onScenarioChange={(updatedScenario) => handleScenarioChange(index, updatedScenario)}\r\n                          onCategoryChange={(updatedScenario) => handleScenarioChange(index, updatedScenario)}\r\n                          placeholder={`Describe scenario ${index + 1}... Be detailed for better analysis.`}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                \r\n                {/* Add Scenario Button */}\r\n                <button\r\n                  onClick={handleAddScenario}\r\n                  className=\"w-full bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700 text-white font-semibold py-4 px-6 rounded-xl transition-all duration-300 transform hover:scale-[1.02] active:scale-[0.98] flex items-center justify-center gap-3 shadow-lg hover:shadow-xl\"\r\n                >\r\n                  <Plus className=\"w-5 h-5\" />\r\n                  Add New Scenario\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Simulation Button */}\r\n            <div className=\"p-6 bg-gradient-to-r from-gray-50 to-white dark:from-gray-800 dark:to-gray-900 border-t border-gray-200 dark:border-gray-700\">\r\n              <button\r\n                className={`\r\n                  relative w-full rounded-xl py-4 px-6 font-semibold transition-all duration-300 flex items-center justify-center gap-3 shadow-lg hover:shadow-xl\r\n                  ${isFreeTier && trialExpired\r\n                    ? 'bg-gradient-to-r from-gray-400 to-gray-500 text-white hover:from-gray-500 hover:to-gray-600' \r\n                    : 'bg-gradient-to-r from-emerald-500 to-teal-600 hover:from-emerald-600 hover:to-teal-700 text-white transform hover:scale-[1.02] active:scale-[0.98]'\r\n                  }\r\n                  ${simulationLoading ? 'opacity-70 cursor-not-allowed' : ''}\r\n                `}\r\n                onClick={handleSimulate}\r\n                disabled={simulationLoading}\r\n              >\r\n                {simulationLoading ? (\r\n                  <>\r\n                    <div className=\"animate-spin rounded-full h-5 w-5 border-2 border-white border-t-transparent\"></div>\r\n                    <span>Analyzing Scenarios...</span>\r\n                  </>\r\n                ) : isFreeTier && trialExpired ? (\r\n                  <>\r\n                    <Lock className=\"w-5 h-5\" />\r\n                    <span>Unlock Advanced Simulations</span>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <Zap className=\"w-5 h-5\" />\r\n                    <span>Run Simulation</span>\r\n                  </>\r\n                )}\r\n                \r\n                {/* Tier Badge */}\r\n                {isPaidTier && (\r\n                  <div className=\"absolute -top-2 -right-2 bg-gradient-to-r from-yellow-400 to-orange-500 text-white text-xs px-2 py-1 rounded-full font-bold shadow-lg\">\r\n                    {userTier.toUpperCase()}\r\n                  </div>\r\n                )}\r\n              </button>\r\n\r\n              {/* Error Message */}\r\n              {error && (\r\n                <div className=\"mt-4 p-4 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-xl\">\r\n                  <p className=\"text-red-600 dark:text-red-400 font-medium text-sm\">{error}</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Right Panel - Results */}\r\n        <div className=\"flex-1 min-w-0\">\r\n          {simulationLoading ? (\r\n            <div className=\"bg-white dark:bg-gray-800 rounded-2xl border border-gray-200 dark:border-gray-700 shadow-xl p-6\">\r\n              <div className=\"flex items-center gap-3 mb-6\">\r\n                <div className=\"w-10 h-10 bg-gradient-to-r from-blue-500 to-purple-600 rounded-xl flex items-center justify-center\">\r\n                  <div className=\"animate-spin rounded-full h-5 w-5 border-2 border-white border-t-transparent\"></div>\r\n                </div>\r\n                <h3 className=\"text-xl font-bold text-gray-900 dark:text-white\">\r\n                  Processing Scenarios...\r\n                </h3>\r\n              </div>\r\n              <div className=\"space-y-4\">\r\n                {[...Array(scenarios.length)].map((_, i) => (\r\n                  <div key={i} className=\"space-y-3 bg-gradient-to-r from-gray-50 to-white dark:from-gray-700 dark:to-gray-800 rounded-xl p-6 border border-gray-200 dark:border-gray-600\">\r\n                    <ShimmerLoader height=\"h-4\" width=\"w-2/3\" rounded=\"rounded-md\" />\r\n                    <ShimmerLoader height=\"h-3\" width=\"w-full\" rounded=\"rounded-md\" />\r\n                    <ShimmerLoader height=\"h-3\" width=\"w-5/6\" rounded=\"rounded-md\" />\r\n                    <ShimmerLoader height=\"h-6\" width=\"w-3/4\" rounded=\"rounded-md\" />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          ) : generatedResults.length > 0 ? (\r\n            // Pass generatedResults and simulationInput to ScenarioSimulationCard\r\n            <ScenarioSimulationCard results={generatedResults} simulationInput={simulationInput} />\r\n          ) : (\r\n            <div className=\"bg-gradient-to-br from-gray-50 to-white dark:from-gray-800 dark:to-gray-900 rounded-2xl border-2 border-dashed border-gray-200 dark:border-gray-700 p-12 text-center\">\r\n              <div className=\"w-16 h-16 bg-gradient-to-r from-gray-200 to-gray-300 dark:from-gray-600 dark:to-gray-700 rounded-2xl flex items-center justify-center mx-auto mb-4\">\r\n                <Target className=\"w-8 h-8 text-gray-400 dark:text-gray-500\" />\r\n              </div>\r\n              <h3 className=\"text-lg font-semibold text-gray-700 dark:text-gray-300 mb-2\">\r\n                Ready for Simulation\r\n              </h3>\r\n              <p className=\"text-gray-500 dark:text-gray-400 text-sm\">\r\n                Add your categorized scenarios and click \"Run Simulation\" to see results here\r\n              </p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Upgrade Modal */}\r\n      {showUpgradeModal && (\r\n        <div className=\"fixed inset-0 flex items-center justify-center bg-black/60 backdrop-blur-sm z-50 p-4\">\r\n          <div className=\"bg-white dark:bg-gray-800 rounded-2xl max-w-md w-full mx-4 relative shadow-2xl border border-gray-200 dark:border-gray-700\">\r\n            <button \r\n              onClick={() => setShowUpgradeModal(false)}\r\n              className=\"absolute top-4 right-4 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors\"\r\n            >\r\n              ✕\r\n            </button>\r\n            \r\n            <div className=\"p-8 text-center\">\r\n              <div className=\"mx-auto w-16 h-16 bg-gradient-to-r from-yellow-400 to-orange-500 rounded-2xl flex items-center justify-center mb-6 shadow-lg\">\r\n                <Crown className=\"w-8 h-8 text-white\" />\r\n              </div>\r\n              \r\n              <h3 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-3\">\r\n                Unlock Advanced Simulations\r\n              </h3>\r\n              \r\n              <p className=\"text-gray-600 dark:text-gray-300 mb-8 leading-relaxed\">\r\n                Upgrade to Pro or Enterprise to access unlimited simulations and advanced features.\r\n              </p>\r\n              \r\n              <div className=\"space-y-4 mb-8 text-left\">\r\n                {['Unlimited simulations', 'Advanced analytics & insights', 'Priority support & faster processing', 'Custom scenario templates'].map((feature, index) => (\r\n                  <div key={index} className=\"flex items-center text-sm text-gray-700 dark:text-gray-300\">\r\n                    <div className=\"w-5 h-5 bg-gradient-to-r from-green-500 to-emerald-600 rounded-full mr-3 flex items-center justify-center flex-shrink-0\">\r\n                      <div className=\"w-2 h-2 bg-white rounded-full\" />\r\n                    </div>\r\n                    {feature}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              \r\n              <div className=\"flex gap-3\">\r\n                <button \r\n                  onClick={() => setShowUpgradeModal(false)}\r\n                  className=\"flex-1 px-6 py-3 border border-gray-300 dark:border-gray-600 rounded-xl text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700 font-medium transition-colors\"\r\n                >\r\n                  Maybe Later\r\n                </button>\r\n                <button \r\n                  onClick={() => {\r\n                    window.location.href = \"/payments\";\r\n                    setShowUpgradeModal(false);\r\n                  }}\r\n                  className=\"flex-1 px-6 py-3 bg-gradient-to-r from-blue-600 to-purple-600 text-white rounded-xl hover:from-blue-700 hover:to-purple-700 font-semibold transition-all transform hover:scale-[1.02] active:scale-[0.98] shadow-lg\"\r\n                >\r\n                  Upgrade Now\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <style>{`\r\n        @keyframes shimmer {\r\n          0% { transform: translateX(-100%); }\r\n          100% { transform: translateX(100%); }\r\n        }\r\n        .animate-shimmer {\r\n          animation: shimmer 2s infinite;\r\n        }\r\n        .scrollbar-thin::-webkit-scrollbar {\r\n          width: 6px;\r\n        }\r\n        .scrollbar-thin::-webkit-scrollbar-track {\r\n          background: transparent;\r\n        }\r\n        .scrollbar-thin::-webkit-scrollbar-thumb {\r\n          background-color: rgb(156 163 175);\r\n          border-radius: 3px;\r\n        }\r\n        .scrollbar-thin::-webkit-scrollbar-thumb:hover {\r\n          background-color: rgb(107 114 128);\r\n        }\r\n      `}</style>\r\n    </>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { ChevronRight, ChevronUp, BarChart3, TrendingUp, PieChart, Activity, Filter, Zap } from \"lucide-react\";\r\nimport {\r\n  Bar,\r\n  Line,\r\n  Pie,\r\n  Doughnut,\r\n} from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  LineElement,\r\n  PointElement,\r\n  ArcElement,\r\n  Tooltip,\r\n  Legend,\r\n  Title,\r\n  Filler\r\n} from 'chart.js';\r\n\r\n// Register all required chart elements and plugins\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  LineElement,\r\n  PointElement,\r\n  ArcElement,\r\n  Tooltip,\r\n  Legend,\r\n  Title,\r\n  Filler\r\n);\r\n\r\n// Shimmer loader component\r\nconst ShimmerLoader = ({ height = \"h-32\", width = \"w-full\", rounded = \"rounded\" }) => (\r\n  <div className={`${height} ${width} ${rounded} bg-gradient-to-r from-slate-200 via-slate-300 to-slate-200 bg-[length:200%_100%] animate-pulse`}></div>\r\n);\r\n\r\nconst ScenarioInsightsCard = ({ processedData = [] }) => {\r\n  const [chartType, setChartType] = useState(\"bar\");\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [filterValue, setFilterValue] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Dummy fallback with more realistic data\r\n  if (!processedData || processedData.length === 0) {\r\n    processedData = [\r\n      { label: \"Performance\", value: 85 },\r\n      { label: \"Efficiency\", value: 72 },\r\n      { label: \"Innovation\", value: 91 },\r\n      { label: \"Sustainability\", value: 68 },\r\n      { label: \"Growth\", value: 79 },\r\n      { label: \"Quality\", value: 94 }\r\n    ];\r\n  }\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => setLoading(false), 2000);\r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n\r\n  // Filter data dynamically\r\n  const filteredData = processedData.filter(item => item.value >= filterValue);\r\n\r\n  // Modern gradient colors\r\n  const gradientColors = [\r\n    'rgba(99, 102, 241, 0.8)',   // Indigo\r\n    'rgba(16, 185, 129, 0.8)',   // Emerald\r\n    'rgba(245, 158, 11, 0.8)',   // Amber\r\n    'rgba(239, 68, 68, 0.8)',    // Red\r\n    'rgba(139, 92, 246, 0.8)',   // Violet\r\n    'rgba(236, 72, 153, 0.8)',   // Pink\r\n  ];\r\n\r\n  const borderColors = [\r\n    'rgb(99, 102, 241)',\r\n    'rgb(16, 185, 129)',\r\n    'rgb(245, 158, 11)',\r\n    'rgb(239, 68, 68)',\r\n    'rgb(139, 92, 246)',\r\n    'rgb(236, 72, 153)',\r\n  ];\r\n\r\n  const chartData = {\r\n    labels: filteredData.map(item => item.label),\r\n    datasets: [\r\n      {\r\n        label: \"Scenario Values\",\r\n        data: filteredData.map(item => item.value),\r\n        backgroundColor: gradientColors.slice(0, filteredData.length),\r\n        borderColor: borderColors.slice(0, filteredData.length),\r\n        borderWidth: 2,\r\n        fill: true,\r\n        tension: 0.4,\r\n        pointRadius: 6,\r\n        pointHoverRadius: 8,\r\n        pointBorderWidth: 2,\r\n        pointBackgroundColor: '#ffffff',\r\n        borderRadius: chartType === 'bar' ? 8 : 0,\r\n        borderSkipped: false,\r\n      }\r\n    ]\r\n  };\r\n\r\n  const baseOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    interaction: {\r\n      mode: 'index',\r\n      intersect: false,\r\n    },\r\n    plugins: {\r\n      title: {\r\n        display: false,\r\n      },\r\n      tooltip: {\r\n        enabled: true,\r\n        mode: 'index',\r\n        intersect: false,\r\n        backgroundColor: 'rgba(17, 24, 39, 0.95)',\r\n        titleColor: '#ffffff',\r\n        bodyColor: '#ffffff',\r\n        borderColor: 'rgba(99, 102, 241, 0.5)',\r\n        borderWidth: 1,\r\n        cornerRadius: 12,\r\n        padding: 12,\r\n        displayColors: true,\r\n        titleFont: {\r\n          size: 14,\r\n          weight: 'bold',\r\n        },\r\n        bodyFont: {\r\n          size: 13,\r\n        },\r\n      },\r\n      legend: {\r\n        display: chartType === 'pie' || chartType === 'circular-progress',\r\n        position: 'bottom',\r\n        labels: {\r\n          color: '#6b7280',\r\n          padding: 20,\r\n          usePointStyle: true,\r\n          pointStyle: 'circle',\r\n          font: {\r\n            size: 12,\r\n            weight: '500',\r\n          },\r\n        },\r\n      },\r\n    },\r\n    scales: chartType === 'pie' || chartType === 'circular-progress' ? {} : {\r\n      x: {\r\n        ticks: { \r\n          color: '#6b7280',\r\n          font: {\r\n            size: 11,\r\n            weight: '500',\r\n          },\r\n        },\r\n        grid: { \r\n          display: false,\r\n        },\r\n        border: {\r\n          display: false,\r\n        },\r\n      },\r\n      y: {\r\n        beginAtZero: true,\r\n        ticks: { \r\n          color: '#6b7280',\r\n          font: {\r\n            size: 11,\r\n            weight: '500',\r\n          },\r\n        },\r\n        grid: { \r\n          color: 'rgba(229, 231, 235, 0.5)',\r\n          drawBorder: false,\r\n        },\r\n        border: {\r\n          display: false,\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  const chartOptions = {\r\n    ...baseOptions,\r\n    plugins: {\r\n      ...baseOptions.plugins,\r\n      ...(chartType === 'circular-progress' && {\r\n        cutout: '70%',\r\n      }),\r\n    },\r\n  };\r\n\r\n  const renderChart = () => {\r\n    switch (chartType) {\r\n      case \"bar\": return <Bar data={chartData} options={chartOptions} />;\r\n      case \"line\": return <Line data={chartData} options={chartOptions} />;\r\n      case \"pie\": return <Pie data={chartData} options={chartOptions} />;\r\n      case \"circular-progress\": return <Doughnut data={chartData} options={chartOptions} />;\r\n      default: return <p className=\"text-gray-500\">Chart type not supported.</p>;\r\n    }\r\n  };\r\n\r\n  const getChartIcon = (type) => {\r\n    switch (type) {\r\n      case \"bar\": return <BarChart3 className=\"w-4 h-4\" />;\r\n      case \"line\": return <TrendingUp className=\"w-4 h-4\" />;\r\n      case \"pie\": return <PieChart className=\"w-4 h-4\" />;\r\n      case \"circular-progress\": return <Activity className=\"w-4 h-4\" />;\r\n      default: return <BarChart3 className=\"w-4 h-4\" />;\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"bg-white dark:bg-gray-900 rounded-2xl p-6 border border-gray-200 dark:border-gray-700 shadow-xl\">\r\n        <div className=\"space-y-4\">\r\n          <ShimmerLoader height=\"h-8\" width=\"w-48\" rounded=\"rounded-lg\" />\r\n          <ShimmerLoader height=\"h-64\" width=\"w-full\" rounded=\"rounded-xl\" />\r\n          <div className=\"flex gap-3\">\r\n            <ShimmerLoader height=\"h-10\" width=\"w-32\" rounded=\"rounded-lg\" />\r\n            <ShimmerLoader height=\"h-10\" width=\"w-32\" rounded=\"rounded-lg\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-900 rounded-2xl p-6 border border-gray-200 dark:border-gray-700 shadow-xl hover:shadow-2xl transition-all duration-300 backdrop-blur-sm\">\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <div className=\"flex items-center gap-3\">\r\n          <div className=\"p-2 bg-gradient-to-r from-emerald-500 to-teal-600 rounded-xl\">\r\n            <Zap className=\"w-5 h-5 text-white\" />\r\n          </div>\r\n          <h2 className=\"text-xl font-bold bg-gradient-to-r from-emerald-600 to-teal-600 bg-clip-text text-transparent\">\r\n            Scenario Insights\r\n          </h2>\r\n        </div>\r\n        <button\r\n          onClick={() => setIsOpen(!isOpen)}\r\n          className=\"p-2 rounded-xl bg-gray-100 dark:bg-gray-800 hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors duration-200\"\r\n        >\r\n          {isOpen ? (\r\n            <ChevronUp className=\"w-5 h-5 text-gray-600 dark:text-gray-300\" />\r\n          ) : (\r\n            <ChevronRight className=\"w-5 h-5 text-gray-600 dark:text-gray-300\" />\r\n          )}\r\n        </button>\r\n      </div>\r\n\r\n      {isOpen && (\r\n        <div className=\"space-y-6 animate-in slide-in-from-top-2 duration-300\">\r\n          <p className=\"text-gray-600 dark:text-gray-300 text-sm leading-relaxed\">\r\n            Analyze trends and patterns from scenario data with interactive visualizations and dynamic filtering.\r\n          </p>\r\n\r\n          {/* Chart Type Selector */}\r\n          <div className=\"space-y-3\">\r\n            <label className=\"flex items-center gap-2 text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n              <BarChart3 className=\"w-4 h-4\" />\r\n              Chart Type\r\n            </label>\r\n            <div className=\"grid grid-cols-2 gap-2\">\r\n              {[\r\n                { value: 'bar', label: 'Bar Chart' },\r\n                { value: 'line', label: 'Line Chart' },\r\n                { value: 'pie', label: 'Pie Chart' },\r\n                { value: 'circular-progress', label: 'Donut Chart' }\r\n              ].map((option) => (\r\n                <button\r\n                  key={option.value}\r\n                  onClick={() => setChartType(option.value)}\r\n                  className={`p-3 rounded-xl border-2 transition-all duration-200 flex items-center justify-center gap-2 text-sm font-medium ${\r\n                    chartType === option.value\r\n                      ? 'border-indigo-500 bg-indigo-50 dark:bg-indigo-900/20 text-indigo-700 dark:text-indigo-300'\r\n                      : 'border-gray-200 dark:border-gray-700 hover:border-gray-300 dark:hover:border-gray-600 text-gray-600 dark:text-gray-400'\r\n                  }`}\r\n                >\r\n                  {getChartIcon(option.value)}\r\n                  {option.label}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Value Filter */}\r\n          <div className=\"space-y-3\">\r\n            <label className=\"flex items-center gap-2 text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n              <Filter className=\"w-4 h-4\" />\r\n              Minimum Value Filter\r\n            </label>\r\n            <div className=\"space-y-2\">\r\n              <input\r\n                type=\"range\"\r\n                min=\"0\"\r\n                max=\"100\"\r\n                step=\"5\"\r\n                value={filterValue}\r\n                onChange={(e) => setFilterValue(Number(e.target.value))}\r\n                className=\"w-full h-2 bg-gray-200 dark:bg-gray-700 rounded-lg appearance-none cursor-pointer slider\"\r\n                style={{\r\n                  background: `linear-gradient(to right, #6366f1 0%, #6366f1 ${filterValue}%, #e5e7eb ${filterValue}%, #e5e7eb 100%)`\r\n                }}\r\n              />\r\n              <div className=\"flex justify-between text-xs text-gray-500 dark:text-gray-400\">\r\n                <span>0</span>\r\n                <span className=\"px-2 py-1 bg-indigo-100 dark:bg-indigo-900/30 text-indigo-700 dark:text-indigo-300 rounded-lg font-medium\">\r\n                  ≥ {filterValue}\r\n                </span>\r\n                <span>100</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Chart Preview */}\r\n          <div className=\"relative\">\r\n            <div className=\"h-80 bg-gradient-to-br from-gray-50 to-gray-100 dark:from-gray-800 dark:to-gray-900 rounded-2xl p-6 border border-gray-200 dark:border-gray-700\">\r\n              <div className=\"flex items-center gap-2 mb-4\">\r\n                {getChartIcon(chartType)}\r\n                <h3 className=\"text-lg font-semibold text-gray-800 dark:text-gray-200\">\r\n                  {chartType.charAt(0).toUpperCase() + chartType.slice(1).replace('-', ' ')} Preview\r\n                </h3>\r\n              </div>\r\n              <div className=\"h-64\">\r\n                {renderChart()}\r\n              </div>\r\n            </div>\r\n            \r\n            {/* Data Summary */}\r\n            <div className=\"mt-4 p-4 bg-gray-50 dark:bg-gray-800 rounded-xl\">\r\n              <div className=\"flex items-center justify-between text-sm\">\r\n                <span className=\"text-gray-600 dark:text-gray-400\">\r\n                  Showing {filteredData.length} of {processedData.length} scenarios\r\n                </span>\r\n                <span className=\"text-gray-600 dark:text-gray-400\">\r\n                  Avg: {Math.round(filteredData.reduce((sum, item) => sum + item.value, 0) / filteredData.length || 0)}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <style>{`\r\n        .slider::-webkit-slider-thumb {\r\n          appearance: none;\r\n          width: 20px;\r\n          height: 20px;\r\n          background: #6366f1;\r\n          border-radius: 50%;\r\n          cursor: pointer;\r\n          box-shadow: 0 4px 8px rgba(99, 102, 241, 0.3);\r\n          transition: all 0.2s ease;\r\n        }\r\n        \r\n        .slider::-webkit-slider-thumb:hover {\r\n          transform: scale(1.1);\r\n          box-shadow: 0 6px 12px rgba(99, 102, 241, 0.4);\r\n        }\r\n        \r\n        .slider::-moz-range-thumb {\r\n          width: 20px;\r\n          height: 20px;\r\n          background: #6366f1;\r\n          border-radius: 50%;\r\n          cursor: pointer;\r\n          border: none;\r\n          box-shadow: 0 4px 8px rgba(99, 102, 241, 0.3);\r\n          transition: all 0.2s ease;\r\n        }\r\n        \r\n        .slider::-moz-range-thumb:hover {\r\n          transform: scale(1.1);\r\n          box-shadow: 0 6px 12px rgba(99, 102, 241, 0.4);\r\n        }\r\n        \r\n        .animate-in {\r\n          animation: slideIn 0.3s ease-out;\r\n        }\r\n        \r\n        @keyframes slideIn {\r\n          from {\r\n            opacity: 0;\r\n            transform: translateY(-10px);\r\n          }\r\n          to {\r\n            opacity: 1;\r\n            transform: translateY(0);\r\n          }\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScenarioInsightsCard;","\r\nimport React, { useState, useMemo, useEffect } from 'react';\r\nimport { CheckSquare, Trash2, FileEdit, PlayCircle, List, Grid, Filter, BarChart3, Loader2, ChevronDown, Expand, Minimize2, X, ChevronRight, ChevronUp, Sparkles } from 'lucide-react';\r\n// Dark Theme Toggle Component\r\nconst ThemeToggle = ({ isDark, setIsDark }) => (\r\n  <button\r\n    onClick={() => setIsDark(!isDark)}\r\n    className=\"p-2 rounded-xl bg-gray-100 dark:bg-gray-800 hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors duration-200\"\r\n    title=\"Toggle theme\"\r\n  >\r\n    {isDark ? (\r\n      <span className=\"text-yellow-500\">☀️</span>\r\n    ) : (\r\n      <span className=\"text-gray-600\">🌙</span>\r\n    )}\r\n  </button>\r\n);\r\n\r\n// Shimmer Loader Component\r\nconst ShimmerLoader = ({ height = \"h-32\", width = \"w-full\", rounded = \"rounded-lg\" }) => (\r\n  <div className={`${height} ${width} ${rounded} bg-gradient-to-r from-gray-100 via-gray-200 to-gray-100 dark:from-gray-800 dark:via-gray-700 dark:to-gray-800 animate-pulse`} \r\n       style={{ \r\n         backgroundSize: '200% 100%',\r\n         animation: 'shimmer 2s ease-in-out infinite'\r\n       }}>\r\n    <style>{`\r\n      @keyframes shimmer {\r\n        0% { background-position: -200% 0; }\r\n        100% { background-position: 200% 0; }\r\n      }\r\n    `}</style>\r\n  </div>\r\n);\r\n\r\nconst mockScenarios = [\r\n  { id: '1', name: 'Q3 Market Forecast', category: 'Finance', inputs: { revenue: 10000, cost: 8000 }, lastSimulated: '2025-06-08', result: { profit: 2000 } },\r\n  { id: '2', name: 'Summer Ad Campaign', category: 'Marketing', inputs: { reach: 500000, conversion: 0.02 }, lastSimulated: '2025-06-07', result: { roi: 3.5 } },\r\n  { id: '3', name: 'Hiring Plan', category: 'HR', inputs: { newHires: 10, avgSalary: 70000 }, lastSimulated: '2025-06-06', result: { totalCost: 700000 } },\r\n];\r\n\r\n// Modern Button Component\r\nconst Button = ({ children, variant = 'default', size = 'default', className = '', onClick, ...props }) => {\r\n  const baseClasses = 'inline-flex items-center justify-center rounded-xl font-medium transition-all duration-200 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 active:scale-95';\r\n  \r\n  const variants = {\r\n    default: 'bg-gradient-to-r from-blue-600 to-blue-700 dark:from-blue-500 dark:to-blue-600 text-white hover:from-blue-700 hover:to-blue-800 dark:hover:from-blue-600 dark:hover:to-blue-700 shadow-lg hover:shadow-xl focus-visible:ring-blue-500',\r\n    outline: 'border-2 border-gray-200 dark:border-gray-700 bg-white/80 dark:bg-gray-800/80 backdrop-blur-sm hover:bg-gray-50 dark:hover:bg-gray-700/80 hover:border-gray-300 dark:hover:border-gray-600 text-gray-700 dark:text-gray-200 hover:text-gray-900 dark:hover:text-gray-100 shadow-sm hover:shadow-md',\r\n    ghost: 'hover:bg-gray-100/80 dark:hover:bg-gray-800/80 backdrop-blur-sm text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-100 rounded-lg'\r\n  };\r\n  \r\n  const sizes = {\r\n    default: 'h-11 px-6 py-3',\r\n    sm: 'h-9 px-4 text-sm',\r\n    lg: 'h-12 px-8 text-lg'\r\n  };\r\n  \r\n  return (\r\n    <button\r\n      className={`${baseClasses} ${variants[variant]} ${sizes[size]} ${className}`}\r\n      onClick={onClick}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\n// Modern Input Component\r\nconst Input = ({ className = '', ...props }) => {\r\n  return (\r\n    <input\r\n      className={`flex h-12 w-full rounded-xl border-2 border-gray-200 dark:border-gray-700 bg-white/80 dark:bg-gray-800/80 backdrop-blur-sm px-4 py-3 text-sm text-gray-900 dark:text-gray-100 ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-gray-500 dark:placeholder:text-gray-400 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-blue-500 focus-visible:border-blue-500 disabled:cursor-not-allowed disabled:opacity-50 transition-all duration-200 hover:border-gray-300 dark:hover:border-gray-600 shadow-sm hover:shadow-md ${className}`}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\n// Modern Card Components\r\nconst Card = ({ children, className = '', onClick }) => {\r\n  return (\r\n    <div className={`rounded-2xl border border-gray-200 dark:border-gray-700 bg-white/80 dark:bg-gray-800/80 backdrop-blur-sm text-card-foreground shadow-lg hover:shadow-xl dark:hover:shadow-2xl transition-all duration-300 cursor-pointer hover:scale-[1.02] hover:border-gray-300 dark:hover:border-gray-600 ${className}`} onClick={onClick}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CardContent = ({ children, className = '' }) => {\r\n  return <div className={`p-6 ${className}`}>{children}</div>;\r\n};\r\n\r\n// Modern Dropdown Component\r\nconst DropdownMenu = ({ children }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  \r\n  return (\r\n    <div className=\"relative inline-block text-left\">\r\n      {React.Children.map(children, child => \r\n        React.cloneElement(child, { isOpen, setIsOpen })\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DropdownMenuTrigger = ({ children, isOpen, setIsOpen }) => {\r\n  return React.cloneElement(children, {\r\n    onClick: () => setIsOpen(!isOpen)\r\n  });\r\n};\r\n\r\nconst DropdownMenuContent = ({ children, isOpen, setIsOpen }) => {\r\n  if (!isOpen) return null;\r\n  \r\n  return (\r\n    <div className=\"absolute right-0 z-10 mt-2 w-56 rounded-xl bg-white/95 dark:bg-gray-800/95 backdrop-blur-md shadow-xl ring-1 ring-black/5 dark:ring-white/10 border border-gray-200 dark:border-gray-700 focus:outline-none\">\r\n      <div className=\"py-2\">\r\n        {React.Children.map(children, child => \r\n          React.cloneElement(child, { setIsOpen })\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DropdownMenuItem = ({ children, onClick, setIsOpen }) => {\r\n  return (\r\n    <button\r\n      className=\"block w-full px-4 py-3 text-left text-sm text-gray-700 dark:text-gray-200 hover:bg-gradient-to-r hover:from-blue-50 hover:to-blue-100 dark:hover:from-blue-900/50 dark:hover:to-blue-800/50 hover:text-blue-900 dark:hover:text-blue-100 transition-all duration-200 first:rounded-t-xl last:rounded-b-xl mx-1 rounded-lg\"\r\n      onClick={() => {\r\n        onClick();\r\n        setIsOpen(false);\r\n      }}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\n// Scenario Preview Component\r\nconst ScenarioPreview = ({ isDark }) => {\r\n  const [view, setView] = useState('card');\r\n  const [search, setSearch] = useState('');\r\n  const [selected, setSelected] = useState([]);\r\n  const [simulating, setSimulating] = useState(null);\r\n  const [sortBy, setSortBy] = useState('name');\r\n  const [filterCategory, setFilterCategory] = useState('All');\r\n  const [activeTab, setActiveTab] = useState('All');\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Timer to switch off loading after 3 seconds (on mount)\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => setLoading(false), 3000);\r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n\r\n  // Handle escape key to close expanded view\r\n  useEffect(() => {\r\n    const handleEscape = (e) => {\r\n      if (e.key === 'Escape' && isExpanded) {\r\n        setIsExpanded(false);\r\n      }\r\n    };\r\n    document.addEventListener('keydown', handleEscape);\r\n    return () => document.removeEventListener('keydown', handleEscape);\r\n  }, [isExpanded]);\r\n\r\n  // Prevent body scroll when expanded\r\n  useEffect(() => {\r\n    if (isExpanded) {\r\n      document.body.style.overflow = 'hidden';\r\n    } else {\r\n      document.body.style.overflow = 'auto';\r\n    }\r\n    return () => {\r\n      document.body.style.overflow = 'auto';\r\n    };\r\n  }, [isExpanded]);\r\n\r\n  const filteredScenarios = useMemo(() => {\r\n    return mockScenarios.filter(s =>\r\n      s.name.toLowerCase().includes(search.toLowerCase()) &&\r\n      (filterCategory === 'All' || s.category === filterCategory)\r\n    ).sort((a, b) => {\r\n      if (sortBy === 'name') return a.name.localeCompare(b.name);\r\n      if (sortBy === 'lastSimulated') return new Date(b.lastSimulated) - new Date(a.lastSimulated);\r\n      return 0;\r\n    });\r\n  }, [search, filterCategory, sortBy]);\r\n\r\n  const simulateScenario = async (id) => {\r\n    setSimulating(id);\r\n    setTimeout(() => {\r\n      setSimulating(null);\r\n      alert('Simulation complete for scenario: ' + id);\r\n    }, 1500);\r\n  };\r\n\r\n  const toggleSelection = (id) => {\r\n    setSelected(prev => prev.includes(id) ? prev.filter(sid => sid !== id) : [...prev, id]);\r\n  };\r\n\r\n  const categories = ['All', ...new Set(mockScenarios.map(s => s.category))];\r\n\r\n  const ComponentContent = () => (\r\n    <div className=\"space-y-6\">\r\n      {/* Header with controls */}\r\n      <div className=\"flex flex-wrap items-center justify-between gap-4\">\r\n        <div className=\"flex items-center gap-4\">\r\n          <Input\r\n            placeholder=\"🔍 Search scenarios...\"\r\n            value={search}\r\n            onChange={e => setSearch(e.target.value)}\r\n            className=\"max-w-sm\"\r\n          />\r\n          {isExpanded && (\r\n            <div className=\"text-sm text-gray-600 dark:text-gray-400 bg-gray-100 dark:bg-gray-800 px-3 py-2 rounded-full\">\r\n              {filteredScenarios.length} scenario{filteredScenarios.length !== 1 ? 's' : ''} found\r\n            </div>\r\n          )}\r\n        </div>\r\n        \r\n        <div className=\"flex items-center gap-3\">\r\n          <DropdownMenu>\r\n            <DropdownMenuTrigger>\r\n              <Button variant=\"outline\" size=\"sm\">\r\n                <Filter className=\"w-4 h-4 mr-2\" /> \r\n                Category\r\n                <ChevronDown className=\"w-4 h-4 ml-2\" />\r\n              </Button>\r\n            </DropdownMenuTrigger>\r\n            <DropdownMenuContent>\r\n              {categories.map(cat => (\r\n                <DropdownMenuItem key={cat} onClick={() => setFilterCategory(cat)}>\r\n                  {cat}\r\n                </DropdownMenuItem>\r\n              ))}\r\n            </DropdownMenuContent>\r\n          </DropdownMenu>\r\n          \r\n          <DropdownMenu>\r\n            <DropdownMenuTrigger>\r\n              <Button variant=\"outline\" size=\"sm\">\r\n                <BarChart3 className=\"w-4 h-4 mr-2\" /> \r\n                Sort\r\n                <ChevronDown className=\"w-4 h-4 ml-2\" />\r\n              </Button>\r\n            </DropdownMenuTrigger>\r\n            <DropdownMenuContent>\r\n              <DropdownMenuItem onClick={() => setSortBy('name')}>Name</DropdownMenuItem>\r\n              <DropdownMenuItem onClick={() => setSortBy('lastSimulated')}>Last Simulated</DropdownMenuItem>\r\n            </DropdownMenuContent>\r\n          </DropdownMenu>\r\n          \r\n          <div className=\"flex items-center bg-gray-100 dark:bg-gray-800 rounded-xl p-1\">\r\n            <Button \r\n              variant={view === 'card' ? 'default' : 'ghost'}\r\n              size=\"sm\"\r\n              onClick={() => setView('card')}\r\n              className={`${view === 'card' ? 'shadow-md' : ''}`}\r\n              title=\"Card View\"\r\n            >\r\n              <Grid className=\"w-4 h-4\" />\r\n            </Button>\r\n            <Button \r\n              variant={view === 'list' ? 'default' : 'ghost'}\r\n              size=\"sm\"\r\n              onClick={() => setView('list')}\r\n              className={`${view === 'list' ? 'shadow-md' : ''}`}\r\n              title=\"List View\"\r\n            >\r\n              <List className=\"w-4 h-4\" />\r\n            </Button>\r\n          </div>\r\n          \r\n          {/* Expand/Minimize Button */}\r\n          <Button \r\n            variant=\"ghost\" \r\n            onClick={() => setIsExpanded(!isExpanded)}\r\n            title={isExpanded ? \"Minimize View\" : \"Expand View\"}\r\n            className=\"text-blue-600 dark:text-blue-400 hover:text-blue-700 dark:hover:text-blue-300 hover:bg-blue-50 dark:hover:bg-blue-900/50\"\r\n          >\r\n            {isExpanded ? <Minimize2 className=\"w-5 h-5\" /> : <Expand className=\"w-5 h-5\" />}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Modern Tabs */}\r\n      <div className=\"w-full\">\r\n        <div className=\"flex space-x-2 bg-gray-100 dark:bg-gray-800 p-1 rounded-xl\">\r\n          {categories.map(cat => (\r\n            <button\r\n              key={cat}\r\n              onClick={() => {\r\n                setActiveTab(cat);\r\n                setFilterCategory(cat);\r\n              }}\r\n              className={`px-6 py-3 text-sm font-medium rounded-lg transition-all duration-200 ${\r\n                activeTab === cat\r\n                  ? 'bg-white dark:bg-gray-700 text-blue-600 dark:text-blue-400 shadow-md'\r\n                  : 'text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-100 hover:bg-gray-50 dark:hover:bg-gray-700'\r\n              }`}\r\n            >\r\n              {cat}\r\n            </button>\r\n          ))}\r\n        </div>\r\n        \r\n        <div className=\"mt-6\">\r\n          <div className={`grid gap-6 ${\r\n            view === 'card' \r\n              ? isExpanded \r\n                ? 'grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 2xl:grid-cols-5' \r\n                : 'md:grid-cols-2 lg:grid-cols-3'\r\n              : 'grid-cols-1'\r\n          }`}>\r\n            {filteredScenarios.map(scenario => (\r\n              <div\r\n                key={scenario.id}\r\n                className=\"group\"\r\n              >\r\n                <Card \r\n                  className={`transition-all duration-300 relative ${\r\n                    selected.includes(scenario.id) \r\n                      ? 'ring-2 ring-blue-400 dark:ring-blue-500 shadow-blue-100 dark:shadow-blue-900/50' \r\n                      : ''\r\n                  } ${isExpanded ? 'hover:shadow-2xl' : ''}`}\r\n                  onClick={() => toggleSelection(scenario.id)}\r\n                >\r\n                  <CardContent className=\"p-6 space-y-4\">\r\n                    <div className=\"flex items-start justify-between\">\r\n                      <h4 className={`font-bold text-gray-900 dark:text-gray-100 ${isExpanded ? 'text-lg' : 'text-base'}`}>\r\n                        {scenario.name}\r\n                      </h4>\r\n                      <span className={`text-xs font-medium px-3 py-1 rounded-full ${\r\n                        scenario.category === 'Finance' ? 'bg-green-100 dark:bg-green-900/50 text-green-800 dark:text-green-300' :\r\n                        scenario.category === 'Marketing' ? 'bg-purple-100 dark:bg-purple-900/50 text-purple-800 dark:text-purple-300' :\r\n                        scenario.category === 'HR' ? 'bg-orange-100 dark:bg-orange-900/50 text-orange-800 dark:text-orange-300' :\r\n                        'bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-300'\r\n                      }`}>\r\n                        {scenario.category}\r\n                      </span>\r\n                    </div>\r\n                    \r\n                    <div className=\"text-sm text-gray-700 dark:text-gray-300 bg-gray-50 dark:bg-gray-800/50 p-3 rounded-lg\">\r\n                      <div className=\"font-medium text-gray-900 dark:text-gray-100 mb-1\">Inputs:</div>\r\n                      <div className=\"font-mono text-xs text-gray-600 dark:text-gray-400\">\r\n                        {JSON.stringify(scenario.inputs)}\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"text-xs text-gray-500 dark:text-gray-400 flex items-center gap-2\">\r\n                      <div className=\"w-2 h-2 bg-blue-400 dark:bg-blue-500 rounded-full\"></div>\r\n                      <span>Last simulated: {scenario.lastSimulated}</span>\r\n                    </div>\r\n                    \r\n                    <div className=\"flex items-center justify-between gap-2 pt-2\">\r\n                      <Button size=\"sm\" variant=\"outline\" title=\"Edit\" className=\"hover:bg-blue-50 dark:hover:bg-blue-900/50 hover:border-blue-300 dark:hover:border-blue-600\">\r\n                        <FileEdit className=\"w-4 h-4\" />\r\n                      </Button>\r\n                      <Button \r\n                        size=\"sm\" \r\n                        variant=\"outline\" \r\n                        onClick={(e) => { \r\n                          e.stopPropagation(); \r\n                          simulateScenario(scenario.id); \r\n                        }}\r\n                        title=\"Run Simulation\"\r\n                        disabled={simulating === scenario.id}\r\n                        className=\"hover:bg-green-50 dark:hover:bg-green-900/50 hover:border-green-300 dark:hover:border-green-600\"\r\n                      >\r\n                        {simulating === scenario.id ? \r\n                          <Loader2 className=\"w-4 h-4 animate-spin\" /> : \r\n                          <PlayCircle className=\"w-4 h-4\" />\r\n                        }\r\n                      </Button>\r\n                      <Button size=\"sm\" variant=\"outline\" title=\"View Results\" className=\"hover:bg-purple-50 dark:hover:bg-purple-900/50 hover:border-purple-300 dark:hover:border-purple-600\">\r\n                        <BarChart3 className=\"w-4 h-4\" />\r\n                      </Button>\r\n                      <Button size=\"sm\" variant=\"outline\" title=\"Delete\" className=\"hover:bg-red-50 dark:hover:bg-red-900/50 hover:border-red-300 dark:hover:border-red-600\">\r\n                        <Trash2 className=\"w-4 h-4 text-red-500 dark:text-red-400\" />\r\n                      </Button>\r\n                    </div>\r\n                    \r\n                    {scenario.result && (\r\n                      <div className=\"bg-gradient-to-r from-green-50 to-emerald-50 dark:from-green-900/20 dark:to-emerald-900/20 border-l-4 border-green-400 dark:border-green-500 text-xs p-3 rounded-lg\">\r\n                        <div className=\"font-medium text-green-900 dark:text-green-300 mb-1\">Result:</div>\r\n                        <div className=\"font-mono text-green-800 dark:text-green-400\">\r\n                          {JSON.stringify(scenario.result)}\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </CardContent>\r\n                </Card>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          \r\n          {filteredScenarios.length === 0 && (\r\n            <div className=\"text-center py-16\">\r\n              <div className=\"w-16 h-16 bg-gray-100 dark:bg-gray-800 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n                <Filter className=\"w-8 h-8 text-gray-400 dark:text-gray-500\" />\r\n              </div>\r\n              <div className=\"text-xl font-medium text-gray-900 dark:text-gray-100 mb-2\">No scenarios found</div>\r\n              <div className=\"text-gray-500 dark:text-gray-400\">Try adjusting your search or filter criteria</div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"space-y-6\">\r\n        <div className=\"flex gap-4\">\r\n          <ShimmerLoader height=\"h-12\" width=\"w-64\" rounded=\"rounded-xl\" />\r\n          <ShimmerLoader height=\"h-12\" width=\"w-32\" rounded=\"rounded-xl\" />\r\n          <ShimmerLoader height=\"h-12\" width=\"w-32\" rounded=\"rounded-xl\" />\r\n        </div>\r\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n          <ShimmerLoader height=\"h-64\" width=\"w-full\" rounded=\"rounded-2xl\" />\r\n          <ShimmerLoader height=\"h-64\" width=\"w-full\" rounded=\"rounded-2xl\" />\r\n          <ShimmerLoader height=\"h-64\" width=\"w-full\" rounded=\"rounded-2xl\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* Normal View */}\r\n      {!isExpanded && (\r\n        <div className=\"p-6\">\r\n          <ComponentContent />\r\n        </div>\r\n      )}\r\n\r\n      {/* Expanded/Fullscreen View */}\r\n      {isExpanded && (\r\n        <div className=\"fixed inset-0 z-50 bg-gradient-to-br from-gray-50 to-gray-100 dark:from-gray-900 dark:to-gray-800 flex flex-col\">\r\n          {/* Header with close button */}\r\n          <div className=\"flex-shrink-0 bg-white/80 dark:bg-gray-900/80 backdrop-blur-md border-b border-gray-200 dark:border-gray-700 px-8 py-6 flex items-center justify-between shadow-lg\">\r\n            <div>\r\n              <h1 className=\"text-3xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 dark:from-blue-400 dark:to-purple-400 bg-clip-text text-transparent\">\r\n                Scenario Management\r\n              </h1>\r\n              <p className=\"text-gray-600 dark:text-gray-400 mt-1\">Manage and compare your simulation scenarios</p>\r\n            </div>\r\n            <Button \r\n              variant=\"ghost\" \r\n              onClick={() => setIsExpanded(false)}\r\n              className=\"text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-800\"\r\n              title=\"Close Expanded View\"\r\n            >\r\n              <X className=\"w-6 h-6\" />\r\n            </Button>\r\n          </div>\r\n          \r\n          {/* Scrollable Content Area */}\r\n          <div className=\"flex-1 overflow-auto\">\r\n            <div className=\"p-8 pb-32\">\r\n              <ComponentContent />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Comparison Mode (works in both views) */}\r\n      {selected.length > 1 && (\r\n        <div className={`fixed z-[60] ${\r\n          isExpanded \r\n            ? 'bottom-0 left-0 right-0 max-h-96 overflow-y-auto bg-white/95 dark:bg-gray-900/95 backdrop-blur-md border-t border-gray-200 dark:border-gray-700 shadow-2xl' \r\n            : 'bottom-6 left-1/2 transform -translate-x-1/2 w-[90%] max-w-6xl bg-white/95 dark:bg-gray-900/95 backdrop-blur-md shadow-2xl border border-gray-200 dark:border-gray-700 rounded-2xl'\r\n        } p-6`}>\r\n          <div className=\"flex justify-between items-center mb-4\">\r\n            <div className=\"flex items-center gap-3\">\r\n              <h3 className=\"font-bold text-xl text-gray-900 dark:text-gray-100\">Comparison Mode</h3>\r\n              <span className=\"bg-gradient-to-r from-blue-100 to-purple-100 dark:from-blue-900/50 dark:to-purple-900/50 text-blue-900 dark:text-blue-100 text-sm font-medium px-3 py-1 rounded-full\">\r\n                {selected.length} selected\r\n              </span>\r\n            </div>\r\n            <div className=\"flex items-center gap-3\">\r\n              {isExpanded && (\r\n                <Button \r\n                  variant=\"outline\" \r\n                  size=\"sm\"\r\n                  onClick={() => {\r\n                    const comparisonPanel = document.querySelector('[data-comparison-panel]');\r\n                    if (comparisonPanel) {\r\n                      comparisonPanel.scrollIntoView({ behavior: 'smooth', block: 'start' });\r\n                    }\r\n                  }}\r\n                  title=\"Scroll to top of comparison\"\r\n                >\r\n                  ↑ Top\r\n                </Button>\r\n              )}\r\n              <Button variant=\"ghost\" size=\"sm\" onClick={() => setSelected([])}>\r\n                <X className=\"w-4 h-4\" />\r\n              </Button>\r\n            </div>\r\n          </div>\r\n          \r\n          <div \r\n            data-comparison-panel\r\n            className={`grid gap-4 ${\r\n              isExpanded \r\n                ? 'grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5' \r\n                : 'grid-cols-1 md:grid-cols-2 lg:grid-cols-3'\r\n            }`}\r\n          >\r\n            {mockScenarios.filter(s => selected.includes(s.id)).map((scenario, index) => (\r\n              <div key={scenario.id} className=\"border-2 border-gray-200 dark:border-gray-700 p-4 rounded-xl bg-gradient-to-br from-white to-gray-50 dark:from-gray-800 dark:to-gray-900 hover:shadow-lg transition-all duration-300 hover:border-gray-300 dark:hover:border-gray-600\">\r\n                <div className=\"flex items-center justify-between mb-3\">\r\n                  <h4 className=\"font-bold text-gray-900 dark:text-gray-100 text-sm\">{scenario.name}</h4>\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <span className=\"text-xs bg-gradient-to-r from-blue-100 to-purple-100 dark:from-blue-900/50 dark:to-purple-900/50 text-blue-800 dark:text-blue-200 px-2 py-1 rounded-full font-medium\">\r\n                      #{index + 1}\r\n                    </span>\r\n                    <Button\r\n                      variant=\"ghost\"\r\n                      size=\"sm\"\r\n                      onClick={() => toggleSelection(scenario.id)}\r\n                      className=\"h-6 w-6 p-0 text-gray-400 dark:text-gray-500 hover:text-red-500 dark:hover:text-red-400 hover:bg-red-50 dark:hover:bg-red-900/50\"\r\n                      title=\"Remove from comparison\"\r\n                    >\r\n                      <X className=\"w-3 h-3\" />\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"space-y-3\">\r\n                  <div className=\"text-xs\">\r\n                    <span className=\"font-medium text-gray-700 dark:text-gray-300\">Category:</span>\r\n                    <span className={`ml-2 px-2 py-1 rounded-full text-xs font-medium ${\r\n                      scenario.category === 'Finance' ? 'bg-green-100 dark:bg-green-900/50 text-green-800 dark:text-green-300' :\r\n                      scenario.category === 'Marketing' ? 'bg-purple-100 dark:bg-purple-900/50 text-purple-800 dark:text-purple-300' :\r\n                      scenario.category === 'HR' ? 'bg-orange-100 dark:bg-orange-900/50 text-orange-800 dark:text-orange-300' :\r\n                      'bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-300'\r\n                    }`}>\r\n                      {scenario.category}\r\n                    </span>\r\n                  </div>\r\n                  \r\n                  <div className=\"text-xs\">\r\n                    <span className=\"font-medium text-gray-700 dark:text-gray-300\">Inputs:</span>\r\n                    <div className=\"mt-1 bg-blue-50 dark:bg-blue-900/20 p-2 rounded-lg text-gray-700 dark:text-gray-300 font-mono text-xs\">\r\n                      {JSON.stringify(scenario.inputs, null, 2)}\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div className=\"text-xs\">\r\n                    <span className=\"font-medium text-gray-700\">Result:</span>\r\n                    <div className=\"mt-1 bg-green-50 p-2 rounded-lg text-gray-700 font-mono text-xs\">\r\n                      {JSON.stringify(scenario.result, null, 2)}\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div className=\"text-xs text-gray-500 flex items-center gap-2\">\r\n                    <div className=\"w-2 h-2 bg-blue-400 rounded-full\"></div>\r\n                    <span>Last Simulated: {scenario.lastSimulated}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          \r\n          {isExpanded && (\r\n            <div className=\"mt-6 pt-4 border-t border-gray-200 text-center\">\r\n              <div className=\"text-sm text-gray-600 bg-gray-100 px-4 py-2 rounded-full inline-block\">\r\n                💡 Tip: Click any scenario card above to add/remove from comparison • Use Escape to close expanded view\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\n// Main Collapsible Container Component\r\nexport default function CollapsibleScenarioPreview() {\r\n  const [isOpen, setIsOpen] = useState(false);\r\nreturn (\r\n    <div className=\"relative group\">\r\n      {/* Animated background glow */}\r\n      <div className=\"absolute -inset-1 bg-gradient-to-r from-emerald-500/20 via-blue-500/20 to-purple-500/20 rounded-3xl blur-xl opacity-60 group-hover:opacity-100 transition-all duration-500\"></div>\r\n      \r\n      {/* Main container */}\r\n      <div className=\"relative bg-white/80 dark:bg-slate-800/80 backdrop-blur-xl rounded-3xl border border-white/20 dark:border-slate-700/50 shadow-2xl hover:shadow-emerald-500/10 dark:hover:shadow-emerald-400/10 transition-all duration-500 max-h-[700px] overflow-hidden\">\r\n        \r\n        {/* Header section */}\r\n        <div className=\"p-8 pb-6\">\r\n          <div className=\"flex justify-between items-start\">\r\n            <div className=\"space-y-3\">\r\n              <div className=\"flex items-center gap-3\">\r\n                <div className=\"relative\">\r\n                  <div className=\"w-12 h-12 bg-gradient-to-r from-emerald-500 to-teal-500 rounded-2xl flex items-center justify-center shadow-lg\">\r\n                    <BarChart3 className=\"w-6 h-6 text-white\" />\r\n                  </div>\r\n                  <div className=\"absolute -top-1 -right-1 w-4 h-4 bg-gradient-to-r from-blue-500 to-purple-500 rounded-full flex items-center justify-center\">\r\n                    <Sparkles className=\"w-2 h-2 text-white\" />\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <h2 className=\"text-xl font-bold bg-gradient-to-r from-emerald-600 via-teal-600 to-blue-600 dark:from-emerald-400 dark:via-teal-400 dark:to-blue-400 bg-clip-text text-transparent leading-tight\">\r\n                    Scenario Management Dashboard\r\n                  </h2>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <button\r\n              onClick={() => setIsOpen(!isOpen)}\r\n              className=\"relative group/btn\"\r\n              title={isOpen ? \"Collapse\" : \"Expand\"}\r\n              aria-expanded={isOpen}\r\n            >\r\n              <div className=\"absolute inset-0 bg-gradient-to-r from-blue-500 to-purple-500 rounded-xl blur opacity-0 group-hover/btn:opacity-30 transition-opacity duration-300\"></div>\r\n              <div className=\"relative bg-white/80 dark:bg-slate-700/80 backdrop-blur-sm border border-slate-200/50 dark:border-slate-600/50 rounded-xl p-3 hover:bg-white dark:hover:bg-slate-700 transition-all duration-300 shadow-lg hover:shadow-xl\">\r\n                <div className=\"text-blue-600 dark:text-blue-400 group-hover/btn:text-blue-700 dark:group-hover/btn:text-blue-300 transition-colors duration-200\">\r\n                  {isOpen ? (\r\n                    <ChevronUp className=\"w-6 h-6\" />\r\n                  ) : (\r\n                    <ChevronRight className=\"w-6 h-6\" />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Collapsible content */}\r\n        {isOpen && (\r\n          <div className=\"px-8 pb-8 overflow-y-auto max-h-[500px] custom-scrollbar\">\r\n            <div className=\"space-y-6 animate-in slide-in-from-top-4 duration-500\">\r\n              \r\n              {/* Info banner */}\r\n              <div className=\"relative\">\r\n                <div className=\"absolute inset-0 bg-gradient-to-r from-blue-500/10 via-purple-500/10 to-pink-500/10 rounded-2xl blur-sm\"></div>\r\n                <div className=\"relative bg-gradient-to-r from-blue-50/80 via-purple-50/80 to-pink-50/80 dark:from-blue-900/20 dark:via-purple-900/20 dark:to-pink-900/20 p-6 rounded-2xl border border-blue-200/50 dark:border-blue-700/50 backdrop-blur-sm\">\r\n                  <div className=\"flex items-start gap-4\">\r\n                    <div className=\"w-10 h-10 bg-gradient-to-r from-blue-500 to-purple-500 rounded-xl flex items-center justify-center shadow-lg flex-shrink-0\">\r\n                      <Sparkles className=\"w-5 h-5 text-white\" />\r\n                    </div>\r\n                    <div>\r\n                      <h3 className=\"font-semibold text-slate-800 dark:text-slate-200 mb-2\">\r\n                        Intelligent Scenario Analysis\r\n                      </h3>\r\n                      <p className=\"text-slate-700 dark:text-slate-300 leading-relaxed\">\r\n                        Manage, compare, and analyze your simulation scenarios with advanced filtering and visualization tools.\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Content area */}\r\n              <div className=\"bg-white/50 dark:bg-slate-700/30 rounded-2xl p-6 border border-slate-200/50 dark:border-slate-600/50 backdrop-blur-sm\">\r\n                <ScenarioPreview />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};","import React, { useState } from 'react';\r\nimport ScenarioInput from './ScenarioInput'; // Input Form\r\nimport ScenarioInsightsCard from './ScenarioInsightsCard'; // Insights\r\nimport ScenarioPreview from './ScenarioPreview';\r\nimport BranchingContainer from './BranchingContainer';\r\n\r\nconst NewScenarioPage = () => {\r\n  const [simulationResults, setSimulationResults] = useState([]);\r\n\r\n  const handleSimulate = (results) => {\r\n    setSimulationResults(results);\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-50 dark:from-slate-900 dark:via-slate-800 dark:to-indigo-900\">\r\n      <div className=\"max-w-7xl mx-auto p-6 space-y-12\">\r\n        {/* Page Header */}\r\n        <header className=\"relative\">\r\n          <div className=\"absolute inset-0 bg-gradient-to-r from-blue-600/10 to-indigo-600/10 rounded-2xl blur-xl\"></div>\r\n          <div className=\"relative bg-white/80 dark:bg-slate-800/80 backdrop-blur-sm rounded-2xl p-8 border border-white/20 dark:border-slate-700/50 shadow-xl\">\r\n            <div className=\"flex items-center gap-3 mb-3\">\r\n              <div className=\"w-10 h-10 bg-gradient-to-r from-blue-500 to-indigo-500 rounded-lg flex items-center justify-center\">\r\n                <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\r\n                </svg>\r\n              </div>\r\n              <h1 className=\"text-3xl font-bold bg-gradient-to-r from-blue-600 to-indigo-600 dark:from-blue-400 dark:to-indigo-400 bg-clip-text text-transparent\">\r\n                Omnis' Core\r\n              </h1>\r\n            </div>\r\n            <p className=\"text-slate-600 dark:text-slate-300 text-lg font-medium\">\r\n              Design and test your decision-making scenarios here.\r\n            </p>\r\n          </div>\r\n        </header>\r\n\r\n        {/* Input + Simulation Text Section */}\r\n        <section className=\"flex flex-col md:flex-row gap-8 w-full\">\r\n          {/* Left: Scenario Input */}\r\n          <div className=\"w-full\">\r\n            <div className=\"bg-white/70 dark:bg-slate-800/70 backdrop-blur-sm rounded-2xl border border-white/20 dark:border-slate-700/50 shadow-xl hover:shadow-2xl transition-all duration-300\">\r\n              <div className=\"p-1 bg-gradient-to-r from-blue-500 to-indigo-500 rounded-2xl\">            \r\n                <div className=\"bg-white dark:bg-slate-800 rounded-xl p-6\">\r\n                  <ScenarioInput onSimulate={handleSimulate} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* Scenario Insights & Preview */}\r\n        <section className=\"grid grid-cols-1 gap-8\">\r\n          <div className=\"group\">\r\n            <div className=\"bg-white/70 dark:bg-slate-800/70 backdrop-blur-sm rounded-2xl border border-white/20 dark:border-slate-700/50 shadow-xl hover:shadow-2xl transition-all duration-300 group-hover:scale-[1.02]\">\r\n              <div className=\"p-1 bg-gradient-to-r from-emerald-500 to-teal-500 rounded-2xl\">\r\n                <div className=\"bg-white dark:bg-slate-800 rounded-xl p-6\">\r\n                  <ScenarioInsightsCard results={simulationResults} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"group\">\r\n            <div className=\"bg-white/70 dark:bg-slate-800/70 backdrop-blur-sm rounded-2xl border border-white/20 dark:border-slate-700/50 shadow-xl hover:shadow-2xl transition-all duration-300 group-hover:scale-[1.02]\">\r\n              <div className=\"p-1 bg-gradient-to-r from-purple-500 to-pink-500 rounded-2xl\">\r\n                <div className=\"bg-white dark:bg-slate-800 rounded-xl p-6\">\r\n                  <ScenarioPreview />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewScenarioPage;"],"names":["async","ensureAuth","auth","currentUser","Error","lastGeneratedContent","lastUserPrompt","generateOmnisContent","userPrompt","setContent","callGenerateContent","httpsCallable","functions","result","prompt","data","success","prediction","error","console","message","alert","layouts","placeholders","tree","nodes","id","label","x","y","color","edges","source","target","network","force","BranchingVisualizationRF","_ref","_data$nodes","defaultLayout","activeLayout","setActiveLayout","useState","graphData","length","useMemo","map","n","idx","String","position","Math","random","concat","style","backgroundColor","borderRadius","padding","fontSize","minWidth","textAlign","e","type","animated","stroke","_jsxs","className","children","_jsx","layout","onClick","toUpperCase","ReactFlowProvider","ReactFlow","fitView","nodesDraggable","elementsSelectable","proOptions","hideAttribution","MiniMap","zoomable","pannable","Controls","showInteractive","Background","gap","formatNarrative","content","currentSentenceIndex","arguments","undefined","sentences","sentence","index","split","paragraph","line","lineIndex","trim","startsWith","substring","numberedMatch","match","formattedLine","replace","dangerouslySetInnerHTML","__html","formatResponse","response","JSON","stringify","getNextStepSuggestion","lc","toLowerCase","includes","_speechState$selected","results","setResults","loading","simulationInput","toastMessage","setToastMessage","clickedButtons","setClickedButtons","localResults","setLocalResults","rawResults","setRawResults","narrativeCache","setNarrativeCache","explanationModal","setExplanationModal","isOpen","timestamp","showBranchingModal","setShowBranchingModal","branchingData","setBranchingData","isBranchingLoading","setIsBranchingLoading","speechState","setSpeechState","isSpeaking","selectedVoice","speechRate","availableVoices","exportState","setExportState","showTagInput","customTags","suggestedTags","modalState","setModalState","currentSection","isMobile","showFullscreenMode","handleExportReportClick","setTimeout","generateSuggestedTags","_result$response","tags","now","Date","quarter","ceil","getMonth","push","getFullYear","lowerContent","task","Set","speakNarrative","text","window","speechSynthesis","cancel","cleanText","s","filter","splitIntoSentences","prev","_objectSpread","speakSentence","utterance","SpeechSynthesisUtterance","lang","rate","pitch","voice","onend","onerror","speak","stopNarration","useEffect","timer","clearTimeout","loadVoices","_window$speechSynthes","englishVoices","getVoices","find","default","checkScreenSize","innerWidth","addEventListener","removeEventListener","Array","isArray","rawData","forEach","closeModal","navigateModalSection","direction","sections","currentIndex","indexOf","newIndex","generatedContent","setGeneratedContent","expandedContent","setExpandedContent","query","handleExpandClick","expansionPrompt","callExpandContent","fullExpansionPrompt","expandOmnisText","expanded","handleFeedback","feedback","copy","addFeedback","log","_","i","_Fragment","FiHelpCircle","Boolean","FiThumbsUp","FiThumbsDown","fetch","method","headers","body","ok","status","json","narrative","explanation","handleExplainFurther","AnimatePresence","motion","div","initial","opacity","scale","animate","exit","transition","duration","stiffness","bottom","left","transform","marginBottom","disabled","overflow","FiGitBranch","zIndex","FiLock","FiX","size","maxHeight","BranchingVisualization","treeData","fill","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","toggleFullscreen","value","name","onChange","v","gender","parseFloat","tag","currentTags","t","placeholder","toISOString","markdown","toLocaleString","join","blob","Blob","url","URL","createObjectURL","a","document","createElement","href","download","appendChild","click","removeChild","revokeObjectURL","exportAsMarkdown","htmlContent","newWindow","open","write","close","print","exportAsPDF","SimplifiedInputForm","scenario","onScenarioChange","onCategoryChange","history","setHistory","historyIndex","setHistoryIndex","showCopySuccess","setShowCopySuccess","textareaRef","useRef","wordCount","charCount","handleUndo","previousValue","title","Undo","handleRedo","nextValue","Redo","navigator","clipboard","writeText","err","current","select","execCommand","Copy","Type","Tag","category","newCategory","Edit3","ref","newValue","newHistory","slice","spellCheck","Sparkles","ScenarioInput","_ref2","_user$tier","_user$tier$toLowerCas","onSimulate","scenarios","setScenarios","setIsOpen","memory","saveToFirestore","useMemory","setError","chatHistory","setChatHistory","userInteractions","setUserInteractions","trialExpired","setTrialExpired","showUpgradeModal","setShowUpgradeModal","user","useAuth","discountDeadline","setDiscountDeadline","setLoading","React","simulationLoading","setSimulationLoading","setSimulationInput","generatedResults","setGeneratedResults","isSimulating","setIsSimulating","isModalOpen","setIsModalOpen","userTier","subscriptionTier","tier","call","isFreeTier","isPaidTier","loadFirestoreMemory","checkTrialStatus","loadChatHistory","loadUserInteractions","q","collection","db","uid","orderBy","loadedMemory","getDocs","docs","doc","loadedChat","userInteractionsRef","where","interactions","_user$tier2","_user$tier2$toLowerCa","_userData$trialStarte","_userData$trialStarte2","_user$trialStartedAt","_user$trialStartedAt$","userRef","userSnap","getDoc","exists","userData","trialStart","trialStartedAt","toDate","trialEnd","setDate","getDate","_userData$discountAva","_userData$discountAva2","_user$discountAvailab","_user$discountAvailab2","discountAvailableUntil","newDiscountEnd","discountEndTimestamp","Timestamp","fromDate","setDoc","merge","msLeft","daysLeft","floor","hoursLeft","minutesLeft","serverTimestamp","hasUsedSimulationTrial","handleScenarioChange","updatedScenario","updated","ShimmerLoader","height","width","rounded","ChevronUp","ChevronRight","handleRemoveScenario","Trash2","handleAddScenario","Plus","filteredScenarios","Promise","all","c","batchSize","chunks","array","chunkArray","group","batch","writeBatch","newResult","set","userId","commit","storeResultsInBatches","Lock","Zap","ScenarioSimulationCard","Target","Crown","feature","location","ChartJS","register","CategoryScale","LinearScale","BarElement","LineElement","PointElement","ArcElement","Tooltip","Legend","Title","Filler","processedData","chartType","setChartType","filterValue","setFilterValue","filteredData","item","chartData","labels","datasets","borderColor","borderWidth","tension","pointRadius","pointHoverRadius","pointBorderWidth","pointBackgroundColor","borderSkipped","baseOptions","responsive","maintainAspectRatio","interaction","mode","intersect","plugins","display","tooltip","enabled","titleColor","bodyColor","cornerRadius","displayColors","titleFont","weight","bodyFont","legend","usePointStyle","pointStyle","font","scales","ticks","grid","border","beginAtZero","drawBorder","chartOptions","cutout","getChartIcon","BarChart3","TrendingUp","PieChart","Activity","option","Filter","min","max","step","Number","background","charAt","renderChart","Bar","options","Line","Pie","Doughnut","round","reduce","sum","backgroundSize","animation","mockScenarios","inputs","revenue","cost","lastSimulated","profit","reach","conversion","roi","newHires","avgSalary","totalCost","Button","_ref3","variant","props","_objectWithoutProperties","_excluded","outline","ghost","sm","lg","Input","_ref4","_excluded2","Card","_ref5","CardContent","_ref6","DropdownMenu","_ref7","child","DropdownMenuTrigger","_ref8","DropdownMenuContent","_ref9","DropdownMenuItem","_ref0","ScenarioPreview","_ref1","isDark","view","setView","search","setSearch","selected","setSelected","simulating","setSimulating","sortBy","setSortBy","filterCategory","setFilterCategory","activeTab","setActiveTab","isExpanded","setIsExpanded","handleEscape","key","sort","b","localeCompare","toggleSelection","sid","categories","ComponentContent","ChevronDown","cat","Grid","List","Minimize2","Expand","FileEdit","stopPropagation","simulateScenario","Loader2","PlayCircle","X","comparisonPanel","querySelector","scrollIntoView","behavior","block","CollapsibleScenarioPreview","NewScenarioPage","simulationResults","setSimulationResults","ScenarioInsightsCard"],"sourceRoot":""}